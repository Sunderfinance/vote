{"version":3,"sources":["webpack:///./node_modules/ethereum-cryptography/node_modules/secp256k1/lib/index.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/lib/api/index.js","webpack:///./node_modules/ethereum-cryptography/secp256k1.js","webpack:///./node_modules/ethereum-cryptography/random.js","webpack:///./node_modules/ethereum-cryptography/node_modules/secp256k1/lib/elliptic.js","webpack:///./node_modules/object-assign/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/is-hex-prefixed/src/index.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/js.js","webpack:///./node_modules/strip-hex-prefix/src/index.js","webpack:///./node_modules/ethereum-cryptography/hash-utils.js","webpack:///./node_modules/ethjs-util/lib/index.js","webpack:///./node_modules/rlp/dist/index.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/lib/keccak.js","webpack:///./node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js","webpack:///./node_modules/ethereum-cryptography/keccak.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/lib/keccak-state-unroll.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/lib/api/keccak.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/lib/api/shake.js","webpack:///./node_modules/assert/assert.js"],"names":["errors","IMPOSSIBLE_CASE","TWEAK_ADD","TWEAK_MUL","CONTEXT_RANDOMIZE_UNKNOW","SECKEY_INVALID","PUBKEY_PARSE","PUBKEY_SERIALIZE","PUBKEY_COMBINE","SIG_PARSE","SIGN","RECOVER","ECDH","assert","cond","msg","Error","isUint8Array","name","value","length","Uint8Array","undefined","Array","isArray","numbers","join","includes","isCompressed","toTypeString","getAssertedOutput","output","len","Object","prototype","toString","call","slice","module","exports","secp256k1","seed","contextRandomize","seckey","privateKeyVerify","privateKeyNegate","tweak","privateKeyTweakAdd","privateKeyTweakMul","pubkey","publicKeyVerify","compressed","publicKeyCreate","publicKeyConvert","publicKeyNegate","pubkeys","publicKeyCombine","publicKeyTweakAdd","publicKeyTweakMul","sig","signatureNormalize","obj","outputlen","signatureExport","signatureImport","msg32","options","data","noncefn","signature","recid","ecdsaSign","ecdsaVerify","ecdsaRecover","hashfn","xbuf","ybuf","ecdh","createKeccak","createShake","KeccakState","Keccak","Shake","algorithm","hash","toLowerCase","__awaiter","this","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","pop","push","__export","m","p","hasOwnProperty","defineProperty","secp256k1_1","random_1","SECP256K1_PRIVATE_KEY_SIZE","createPrivateKey","pk","_a","getRandomBytes","createPrivateKeySync","getRandomBytesSync","randombytes","bytes","err","resp","EC","ec","ecparams","curve","BN","constructor","loadCompressedPublicKey","first","x","cmp","toRed","red","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadUncompressedPublicKey","x3","redISub","isZero","loadPublicKey","subarray","savePublicKey","point","encode","i","bn","negate","sub","umod","toArrayLike","set","iadd","isub","tweaked","imul","pair","keyFromPrivate","getPublic","pairs","add","isInfinity","mul","r","s","nh","sigR","sigS","lenR","posR","lenS","posS","message","_noncefn","counter","nonce","isValid","d","sign","canonical","k","pers","recoveryParam","sigObj","sigr","sigs","verify","recoverPubKey","scalar","sha256","update","digest","getX","toArray","getY","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","val","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","test3","split","forEach","letter","keys","target","source","from","symbols","to","arguments","key","__webpack_amd_options__","str","isHexPrefixed","createHashFunction","hashConstructor","Buffer","stripHexPrefix","padToEven","a","intToHex","hex","intToBuffer","getBinarySize","byteLength","arrayContainsArray","superset","subset","some","Boolean","indexOf","toUtf8","bufferValue","replace","toAscii","l","substring","code","parseInt","substr","fromUtf8","stringValue","fromAscii","charCodeAt","getKeys","params","allowEmpty","isHexString","match","getLength","decode","input","buf","concat","encodeLength","inputBuf","toBuffer","safeParseInt","base","offset","hexLength","lLength","firstByte","stream","inputBuffer","decoded","_decode","remainder","llength","innerRemainder","totalLength","integer","isBuffer","isBN","state","blockSize","count","squeezing","initialize","rate","capacity","absorb","keccakState","p1600","absorbLastFewBits","bits","squeeze","alloc","copy","dest","hash_utils_1","createKeccakHash","keccak224","keccak256","keccak384","keccak512","P1600_ROUND_CONSTANTS","round","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","lo","hi","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4","Transform","delimitedSuffix","hashBitLength","super","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","_finalized","chunk","encoding","callback","error","_resetState","clone","size","dataByteLength","objectAssign","compare","Math","min","global","_isBuffer","util","hasOwn","pSlice","functionsHaveNames","pToString","isView","arrbuf","ArrayBuffer","DataView","buffer","ok","regex","getName","func","isFunction","truncate","inspect","something","rawname","getMessage","self","actual","operator","expected","fail","stackStartFunction","AssertionError","_deepEqual","strict","memos","isDate","getTime","isRegExp","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","objEquiv","isArguments","object","actualVisitedObjects","isPrimitive","getPrototypeOf","aIsArgs","bIsArgs","ka","objectKeys","kb","sort","notDeepStrictEqual","expectedException","test","isPrototypeOf","_tryBlock","block","_throws","shouldThrow","userProvidedMessage","isUnwantedException","isError","isUnexpectedException","generatedMessage","captureStackTrace","stack","out","fn_name","idx","next_line","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError"],"mappings":"sGAAA,MAAMA,EAAS,CACbC,gBAAiB,wCACjBC,UACE,oEACFC,UAAW,8CACXC,yBAA0B,wCAC1BC,eAAgB,yBAChBC,aAAc,iCACdC,iBAAkB,iCAClBC,eAAgB,0CAChBC,UAAW,gCACXC,KAAM,uEACNC,QAAS,kCACTC,KAAM,yCAGR,SAASC,EAAQC,EAAMC,GACrB,IAAKD,EAAM,MAAM,IAAIE,MAAMD,GAG7B,SAASE,EAAcC,EAAMC,EAAOC,GAGlC,GAFAP,EAAOM,aAAiBE,WAAY,YAAYH,8BAEjCI,IAAXF,EACF,GAAIG,MAAMC,QAAQJ,GAAS,CACzB,MAAMK,EAAUL,EAAOM,KAAK,MACtBX,EAAM,YAAYG,sCAAyCO,KACjEZ,EAAOO,EAAOO,SAASR,EAAMC,QAASL,OACjC,CACL,MAAMA,EAAM,YAAYG,qCAAwCE,IAChEP,EAAOM,EAAMC,SAAWA,EAAQL,IAKtC,SAASa,EAAcT,GACrBN,EAA+B,YAAxBgB,EAAaV,GAAsB,uCAG5C,SAASW,EAAmBC,EAAS,CAACC,GAAQ,IAAIX,WAAWW,IAAMZ,GAGjE,MAFsB,oBAAXW,IAAuBA,EAASA,EAAOX,IAClDH,EAAa,SAAUc,EAAQX,GACxBW,EAGT,SAASF,EAAcV,GACrB,OAAOc,OAAOC,UAAUC,SAASC,KAAKjB,GAAOkB,MAAM,GAAI,GAGzDC,EAAOC,QAAWC,IACT,CACL,iBAAkBC,GAOhB,OANA5B,EACW,OAAT4B,GAAiBA,aAAgBpB,WACjC,6CAEW,OAAToB,GAAexB,EAAa,OAAQwB,EAAM,IAEtCD,EAAUE,iBAAiBD,IACjC,KAAK,EACH,MAAM,IAAIzB,MAAMhB,EAAOI,4BAI7B,iBAAkBuC,GAGhB,OAFA1B,EAAa,cAAe0B,EAAQ,IAEU,IAAvCH,EAAUI,iBAAiBD,IAGpC,iBAAkBA,GAGhB,OAFA1B,EAAa,cAAe0B,EAAQ,IAE5BH,EAAUK,iBAAiBF,IACjC,KAAK,EACH,OAAOA,EACT,KAAK,EACH,MAAM,IAAI3B,MAAMhB,EAAOC,mBAI7B,mBAAoB0C,EAAQG,GAI1B,OAHA7B,EAAa,cAAe0B,EAAQ,IACpC1B,EAAa,QAAS6B,EAAO,IAErBN,EAAUO,mBAAmBJ,EAAQG,IAC3C,KAAK,EACH,OAAOH,EACT,KAAK,EACH,MAAM,IAAI3B,MAAMhB,EAAOE,aAI7B,mBAAoByC,EAAQG,GAI1B,OAHA7B,EAAa,cAAe0B,EAAQ,IACpC1B,EAAa,QAAS6B,EAAO,IAErBN,EAAUQ,mBAAmBL,EAAQG,IAC3C,KAAK,EACH,OAAOH,EACT,KAAK,EACH,MAAM,IAAI3B,MAAMhB,EAAOG,aAI7B,gBAAiB8C,GAGf,OAFAhC,EAAa,aAAcgC,EAAQ,CAAC,GAAI,KAEK,IAAtCT,EAAUU,gBAAgBD,IAGnC,gBAAiBN,EAAQQ,GAAa,EAAMpB,GAK1C,OAJAd,EAAa,cAAe0B,EAAQ,IACpCf,EAAauB,GACbpB,EAASD,EAAkBC,EAAQoB,EAAa,GAAK,IAE7CX,EAAUY,gBAAgBrB,EAAQY,IACxC,KAAK,EACH,OAAOZ,EACT,KAAK,EACH,MAAM,IAAIf,MAAMhB,EAAOK,gBACzB,KAAK,EACH,MAAM,IAAIW,MAAMhB,EAAOO,oBAI7B,iBAAkB0C,EAAQE,GAAa,EAAMpB,GAK3C,OAJAd,EAAa,aAAcgC,EAAQ,CAAC,GAAI,KACxCrB,EAAauB,GACbpB,EAASD,EAAkBC,EAAQoB,EAAa,GAAK,IAE7CX,EAAUa,iBAAiBtB,EAAQkB,IACzC,KAAK,EACH,OAAOlB,EACT,KAAK,EACH,MAAM,IAAIf,MAAMhB,EAAOM,cACzB,KAAK,EACH,MAAM,IAAIU,MAAMhB,EAAOO,oBAI7B,gBAAiB0C,EAAQE,GAAa,EAAMpB,GAK1C,OAJAd,EAAa,aAAcgC,EAAQ,CAAC,GAAI,KACxCrB,EAAauB,GACbpB,EAASD,EAAkBC,EAAQoB,EAAa,GAAK,IAE7CX,EAAUc,gBAAgBvB,EAAQkB,IACxC,KAAK,EACH,OAAOlB,EACT,KAAK,EACH,MAAM,IAAIf,MAAMhB,EAAOM,cACzB,KAAK,EACH,MAAM,IAAIU,MAAMhB,EAAOC,iBACzB,KAAK,EACH,MAAM,IAAIe,MAAMhB,EAAOO,oBAI7B,iBAAkBgD,EAASJ,GAAa,EAAMpB,GAC5ClB,EAAOU,MAAMC,QAAQ+B,GAAU,uCAC/B1C,EAAO0C,EAAQnC,OAAS,EAAG,6DAC3B,IAAK,MAAM6B,KAAUM,EACnBtC,EAAa,aAAcgC,EAAQ,CAAC,GAAI,KAK1C,OAHArB,EAAauB,GACbpB,EAASD,EAAkBC,EAAQoB,EAAa,GAAK,IAE7CX,EAAUgB,iBAAiBzB,EAAQwB,IACzC,KAAK,EACH,OAAOxB,EACT,KAAK,EACH,MAAM,IAAIf,MAAMhB,EAAOM,cACzB,KAAK,EACH,MAAM,IAAIU,MAAMhB,EAAOQ,gBACzB,KAAK,EACH,MAAM,IAAIQ,MAAMhB,EAAOO,oBAI7B,kBAAmB0C,EAAQH,EAAOK,GAAa,EAAMpB,GAMnD,OALAd,EAAa,aAAcgC,EAAQ,CAAC,GAAI,KACxChC,EAAa,QAAS6B,EAAO,IAC7BlB,EAAauB,GACbpB,EAASD,EAAkBC,EAAQoB,EAAa,GAAK,IAE7CX,EAAUiB,kBAAkB1B,EAAQkB,EAAQH,IAClD,KAAK,EACH,OAAOf,EACT,KAAK,EACH,MAAM,IAAIf,MAAMhB,EAAOM,cACzB,KAAK,EACH,MAAM,IAAIU,MAAMhB,EAAOE,aAI7B,kBAAmB+C,EAAQH,EAAOK,GAAa,EAAMpB,GAMnD,OALAd,EAAa,aAAcgC,EAAQ,CAAC,GAAI,KACxChC,EAAa,QAAS6B,EAAO,IAC7BlB,EAAauB,GACbpB,EAASD,EAAkBC,EAAQoB,EAAa,GAAK,IAE7CX,EAAUkB,kBAAkB3B,EAAQkB,EAAQH,IAClD,KAAK,EACH,OAAOf,EACT,KAAK,EACH,MAAM,IAAIf,MAAMhB,EAAOM,cACzB,KAAK,EACH,MAAM,IAAIU,MAAMhB,EAAOG,aAI7B,mBAAoBwD,GAGlB,OAFA1C,EAAa,YAAa0C,EAAK,IAEvBnB,EAAUoB,mBAAmBD,IACnC,KAAK,EACH,OAAOA,EACT,KAAK,EACH,MAAM,IAAI3C,MAAMhB,EAAOS,aAI7B,gBAAiBkD,EAAK5B,GACpBd,EAAa,YAAa0C,EAAK,IAC/B5B,EAASD,EAAkBC,EAAQ,IAEnC,MAAM8B,EAAM,CAAE9B,SAAQ+B,UAAW,IACjC,OAAQtB,EAAUuB,gBAAgBF,EAAKF,IACrC,KAAK,EACH,OAAO5B,EAAOM,MAAM,EAAGwB,EAAIC,WAC7B,KAAK,EACH,MAAM,IAAI9C,MAAMhB,EAAOS,WACzB,KAAK,EACH,MAAM,IAAIO,MAAMhB,EAAOC,mBAI7B,gBAAiB0D,EAAK5B,GAIpB,OAHAd,EAAa,YAAa0C,GAC1B5B,EAASD,EAAkBC,EAAQ,IAE3BS,EAAUwB,gBAAgBjC,EAAQ4B,IACxC,KAAK,EACH,OAAO5B,EACT,KAAK,EACH,MAAM,IAAIf,MAAMhB,EAAOS,WACzB,KAAK,EACH,MAAM,IAAIO,MAAMhB,EAAOC,mBAI7B,UAAWgE,EAAOtB,EAAQuB,EAAU,GAAInC,GACtCd,EAAa,UAAWgD,EAAO,IAC/BhD,EAAa,cAAe0B,EAAQ,IACpC9B,EAAiC,WAA1BgB,EAAaqC,GAAuB,yCACtB5C,IAAjB4C,EAAQC,MAAoBlD,EAAa,eAAgBiD,EAAQC,WAC7C7C,IAApB4C,EAAQE,SAAuBvD,EAAyC,aAAlCgB,EAAaqC,EAAQE,SAAyB,6CACxFrC,EAASD,EAAkBC,EAAQ,IAEnC,MAAM8B,EAAM,CAAEQ,UAAWtC,EAAQuC,MAAO,MACxC,OAAQ9B,EAAU+B,UAAUV,EAAKI,EAAOtB,EAAQuB,EAAQC,KAAMD,EAAQE,UACpE,KAAK,EACH,OAAOP,EACT,KAAK,EACH,MAAM,IAAI7C,MAAMhB,EAAOU,MACzB,KAAK,EACH,MAAM,IAAIM,MAAMhB,EAAOC,mBAI7B,YAAa0D,EAAKM,EAAOhB,GAKvB,OAJAhC,EAAa,YAAa0C,EAAK,IAC/B1C,EAAa,UAAWgD,EAAO,IAC/BhD,EAAa,aAAcgC,EAAQ,CAAC,GAAI,KAEhCT,EAAUgC,YAAYb,EAAKM,EAAOhB,IACxC,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,MAAM,IAAIjC,MAAMhB,EAAOS,WACzB,KAAK,EACH,MAAM,IAAIO,MAAMhB,EAAOM,gBAI7B,aAAcqD,EAAKW,EAAOL,EAAOd,GAAa,EAAMpB,GAYlD,OAXAd,EAAa,YAAa0C,EAAK,IAC/B9C,EAC0B,WAAxBgB,EAAayC,IACXA,GAAS,GACTA,GAAS,EACX,8DAEFrD,EAAa,UAAWgD,EAAO,IAC/BrC,EAAauB,GACbpB,EAASD,EAAkBC,EAAQoB,EAAa,GAAK,IAE7CX,EAAUiC,aAAa1C,EAAQ4B,EAAKW,EAAOL,IACjD,KAAK,EACH,OAAOlC,EACT,KAAK,EACH,MAAM,IAAIf,MAAMhB,EAAOS,WACzB,KAAK,EACH,MAAM,IAAIO,MAAMhB,EAAOW,SACzB,KAAK,EACH,MAAM,IAAIK,MAAMhB,EAAOC,mBAI7B,KAAMgD,EAAQN,EAAQuB,EAAU,GAAInC,GAclC,OAbAd,EAAa,aAAcgC,EAAQ,CAAC,GAAI,KACxChC,EAAa,cAAe0B,EAAQ,IACpC9B,EAAiC,WAA1BgB,EAAaqC,GAAuB,yCACtB5C,IAAjB4C,EAAQC,MAAoBlD,EAAa,eAAgBiD,EAAQC,WAC9C7C,IAAnB4C,EAAQQ,QACV7D,EAAwC,aAAjCgB,EAAaqC,EAAQQ,QAAwB,iDAC/BpD,IAAjB4C,EAAQS,MAAoB1D,EAAa,eAAgBiD,EAAQS,KAAM,SACtDrD,IAAjB4C,EAAQU,MAAoB3D,EAAa,eAAgBiD,EAAQU,KAAM,IAC3E3D,EAAa,SAAUc,IAEvBA,EAASD,EAAkBC,EAAQ,IAG7BS,EAAUqC,KAAK9C,EAAQkB,EAAQN,EAAQuB,EAAQC,KAAMD,EAAQQ,OAAQR,EAAQS,KAAMT,EAAQU,OACjG,KAAK,EACH,OAAO7C,EACT,KAAK,EACH,MAAM,IAAIf,MAAMhB,EAAOM,cACzB,KAAK,EACH,MAAM,IAAIU,MAAMhB,EAAOY,W,qBC3UjC,MAAMkE,EAAe,EAAQ,QACvBC,EAAc,EAAQ,QAE5BzC,EAAOC,QAAU,SAAUyC,GACzB,MAAMC,EAASH,EAAaE,GACtBE,EAAQH,EAAYC,GAE1B,OAAO,SAAUG,EAAWjB,GAC1B,MAAMkB,EAA4B,kBAAdD,EAAyBA,EAAUE,cAAgBF,EACvE,OAAQC,GACN,IAAK,YAAa,OAAO,IAAIH,EAAO,KAAM,IAAK,KAAM,IAAKf,GAC1D,IAAK,YAAa,OAAO,IAAIe,EAAO,KAAM,IAAK,KAAM,IAAKf,GAC1D,IAAK,YAAa,OAAO,IAAIe,EAAO,IAAK,IAAK,KAAM,IAAKf,GACzD,IAAK,YAAa,OAAO,IAAIe,EAAO,IAAK,KAAM,KAAM,IAAKf,GAE1D,IAAK,WAAY,OAAO,IAAIe,EAAO,KAAM,IAAK,EAAM,IAAKf,GACzD,IAAK,WAAY,OAAO,IAAIe,EAAO,KAAM,IAAK,EAAM,IAAKf,GACzD,IAAK,WAAY,OAAO,IAAIe,EAAO,IAAK,IAAK,EAAM,IAAKf,GACxD,IAAK,WAAY,OAAO,IAAIe,EAAO,IAAK,KAAM,EAAM,IAAKf,GAEzD,IAAK,WAAY,OAAO,IAAIgB,EAAM,KAAM,IAAK,GAAMhB,GACnD,IAAK,WAAY,OAAO,IAAIgB,EAAM,KAAM,IAAK,GAAMhB,GAEnD,QAAS,MAAM,IAAIlD,MAAM,qBAAuBmE,O,kCCtBtD,IAAIG,EAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMzE,GAAS,OAAOA,aAAiBuE,EAAIvE,EAAQ,IAAIuE,GAAE,SAAUG,GAAWA,EAAQ1E,MAC/F,OAAO,IAAKuE,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU7E,GAAS,IAAM8E,EAAKN,EAAUO,KAAK/E,IAAW,MAAOgF,GAAKJ,EAAOI,IACpF,SAASC,EAASjF,GAAS,IAAM8E,EAAKN,EAAU,SAASxE,IAAW,MAAOgF,GAAKJ,EAAOI,IACvF,SAASF,EAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOlF,OAASyE,EAAMS,EAAOlF,OAAOoF,KAAKP,EAAWI,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YAGlEO,EAAelB,MAAQA,KAAKkB,aAAgB,SAAUjB,EAASkB,GAC/D,IAAsGC,EAAGC,EAAGC,EAAGC,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPJ,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOK,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEZ,KAAMkB,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,oBAAXC,SAA0BP,EAAEO,OAAOC,UAAY,WAAa,OAAO/B,OAAUuB,EACvJ,SAASM,EAAKG,GAAK,OAAO,SAAUC,GAAK,OAAOvB,EAAK,CAACsB,EAAGC,KACzD,SAASvB,EAAKwB,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,MAAOX,EAAG,IACN,GAAIJ,EAAI,EAAGC,IAAMC,EAAY,EAARY,EAAG,GAASb,EAAE,UAAYa,EAAG,GAAKb,EAAE,YAAcC,EAAID,EAAE,YAAcC,EAAEzE,KAAKwE,GAAI,GAAKA,EAAEV,SAAWW,EAAIA,EAAEzE,KAAKwE,EAAGa,EAAG,KAAKnB,KAAM,OAAOO,EAE3J,OADID,EAAI,EAAGC,IAAGY,EAAK,CAAS,EAARA,EAAG,GAAQZ,EAAE1F,QACzBsG,EAAG,IACP,KAAK,EAAG,KAAK,EAAGZ,EAAIY,EAAI,MACxB,KAAK,EAAc,OAAXV,EAAEC,QAAgB,CAAE7F,MAAOsG,EAAG,GAAInB,MAAM,GAChD,KAAK,EAAGS,EAAEC,QAASJ,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKV,EAAEI,IAAIQ,MAAOZ,EAAEG,KAAKS,MAAO,SACxC,QACI,GAAMd,EAAIE,EAAEG,OAAML,EAAIA,EAAEzF,OAAS,GAAKyF,EAAEA,EAAEzF,OAAS,MAAkB,IAAVqG,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEV,EAAI,EAAG,SACjG,GAAc,IAAVU,EAAG,MAAcZ,GAAMY,EAAG,GAAKZ,EAAE,IAAMY,EAAG,GAAKZ,EAAE,IAAM,CAAEE,EAAEC,MAAQS,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYV,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIA,EAAIY,EAAI,MAC7D,GAAIZ,GAAKE,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIE,EAAEI,IAAIS,KAAKH,GAAK,MACvDZ,EAAE,IAAIE,EAAEI,IAAIQ,MAChBZ,EAAEG,KAAKS,MAAO,SAEtBF,EAAKf,EAAKtE,KAAKoD,EAASuB,GAC1B,MAAOZ,GAAKsB,EAAK,CAAC,EAAGtB,GAAIS,EAAI,EAAK,QAAUD,EAAIE,EAAI,EACtD,GAAY,EAARY,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEtG,MAAOsG,EAAG,GAAKA,EAAG,QAAK,EAAQnB,MAAM,KAGlF,SAASuB,EAASC,GACd,IAAK,IAAIC,KAAKD,EAAQvF,EAAQyF,eAAeD,KAAIxF,EAAQwF,GAAKD,EAAEC,IAEpE9F,OAAOgG,eAAe1F,EAAS,aAAc,CAAEpB,OAAO,IACtD,IAAI+G,EAAc,EAAQ,QACtBC,EAAW,EAAQ,QACnBC,EAA6B,GACjC,SAASC,IACL,OAAO/C,EAAUC,UAAM,OAAQ,GAAQ,WACnC,IAAI+C,EACJ,OAAO7B,EAAYlB,MAAM,SAAUgD,GAC/B,OAAQA,EAAGvB,OACP,KAAK,EAED,MAAO,CAAC,EAAamB,EAASK,eAAeJ,IACjD,KAAK,EAED,OADAE,EAAKC,EAAGtB,OACJiB,EAAYtF,iBAAiB0F,GACtB,CAAC,EAAcA,GAEnB,CAAC,EAAa,GACzB,KAAK,EAAG,MAAO,CAAC,UAMhC,SAASG,IACL,MAAO,EAAM,CACT,IAAIH,EAAKH,EAASO,mBAAmBN,GACrC,GAAIF,EAAYtF,iBAAiB0F,GAC7B,OAAOA,GALnB/F,EAAQ8F,iBAAmBA,EAS3B9F,EAAQkG,qBAAuBA,EAC/BZ,EAAS,EAAQ,U,oCCxEjB5F,OAAOgG,eAAe1F,EAAS,aAAc,CAAEpB,OAAO,IACtD,IAAIwH,EAAc,EAAQ,QAC1B,SAASH,EAAeI,GACpB,OAAO,IAAI9C,SAAQ,SAAUD,EAASE,GAClC4C,EAAYC,GAAO,SAAUC,EAAKC,GAC1BD,EACA9C,EAAO8C,GAGXhD,EAAQiD,SAKpB,SAASJ,EAAmBE,GACxB,OAAOD,EAAYC,GAFvBrG,EAAQiG,eAAiBA,EAIzBjG,EAAQmG,mBAAqBA,G,wBClB7B,MAAMK,EAAK,EAAQ,QAAYC,GAEzBA,EAAK,IAAID,EAAG,aACZE,EAAWD,EAAGE,MAIdC,EAAKF,EAAS1B,EAAE6B,YAEtB,SAASC,EAAyBC,EAAO3E,GACvC,IAAI4E,EAAI,IAAIJ,EAAGxE,GAGf,GAAI4E,EAAEC,IAAIP,EAASlB,IAAM,EAAG,OAAO,KACnCwB,EAAIA,EAAEE,MAAMR,EAASS,KAGrB,IAAI9C,EAAI2C,EAAEI,SAASC,QAAQL,GAAGM,QAAQZ,EAASa,GAAGC,UAGlD,OAFe,IAAVT,IAAoB1C,EAAEoD,UAASpD,EAAIA,EAAEqD,UAEnCjB,EAAGkB,QAAQ,CAAEC,IAAK,CAAEZ,EAAGA,EAAG3C,EAAGA,KAGtC,SAASwD,EAA2Bd,EAAO3E,EAAMC,GAC/C,IAAI2E,EAAI,IAAIJ,EAAGxE,GACXiC,EAAI,IAAIuC,EAAGvE,GAGf,GAAI2E,EAAEC,IAAIP,EAASlB,IAAM,GAAKnB,EAAE4C,IAAIP,EAASlB,IAAM,EAAG,OAAO,KAM7D,GAJAwB,EAAIA,EAAEE,MAAMR,EAASS,KACrB9C,EAAIA,EAAE6C,MAAMR,EAASS,MAGN,IAAVJ,GAA4B,IAAVA,IAAmB1C,EAAEoD,WAAuB,IAAVV,GAAiB,OAAO,KAGjF,MAAMe,EAAKd,EAAEI,SAASC,QAAQL,GAC9B,OAAK3C,EAAE+C,SAASW,QAAQD,EAAGR,QAAQZ,EAASa,IAAIS,SAEzCvB,EAAGkB,QAAQ,CAAEC,IAAK,CAAEZ,EAAGA,EAAG3C,EAAGA,KAF6B,KAKnE,SAAS4D,EAAevH,GAEtB,MAAMqG,EAAQrG,EAAO,GACrB,OAAQqG,GACN,KAAK,EACL,KAAK,EACH,OAAsB,KAAlBrG,EAAO7B,OAAsB,KAC1BiI,EAAwBC,EAAOrG,EAAOwH,SAAS,EAAG,KAC3D,KAAK,EACL,KAAK,EACL,KAAK,EACH,OAAsB,KAAlBxH,EAAO7B,OAAsB,KAC1BgJ,EAA0Bd,EAAOrG,EAAOwH,SAAS,EAAG,IAAKxH,EAAOwH,SAAS,GAAI,KACtF,QACE,OAAO,MAIb,SAASC,EAAe3I,EAAQ4I,GAC9B,MAAM1H,EAAS0H,EAAMC,OAAO,KAAwB,KAAlB7I,EAAOX,QAGzC,IAAK,IAAIyJ,EAAI,EAAGA,EAAI9I,EAAOX,SAAUyJ,EAAG9I,EAAO8I,GAAK5H,EAAO4H,GAG7DvI,EAAOC,QAAU,CACf,mBACE,OAAO,GAGT,iBAAkBI,GAChB,MAAMmI,EAAK,IAAI3B,EAAGxG,GAClB,OAAOmI,EAAGtB,IAAIP,EAAS1B,GAAK,IAAMuD,EAAGP,SAAW,EAAI,GAGtD,iBAAkB5H,GAChB,MAAMmI,EAAK,IAAI3B,EAAGxG,GACZoI,EAAS9B,EAAS1B,EAAEyD,IAAIF,GAAIG,KAAKhC,EAAS1B,GAAG2D,YAAY7J,WAAY,KAAM,IAEjF,OADAsB,EAAOwI,IAAIJ,GACJ,GAGT,mBAAoBpI,EAAQG,GAC1B,MAAMgI,EAAK,IAAI3B,EAAGrG,GAClB,GAAIgI,EAAGtB,IAAIP,EAAS1B,IAAM,EAAG,OAAO,EAIpC,GAFAuD,EAAGM,KAAK,IAAIjC,EAAGxG,IACXmI,EAAGtB,IAAIP,EAAS1B,IAAM,GAAGuD,EAAGO,KAAKpC,EAAS1B,GAC1CuD,EAAGP,SAAU,OAAO,EAExB,MAAMe,EAAUR,EAAGI,YAAY7J,WAAY,KAAM,IAGjD,OAFAsB,EAAOwI,IAAIG,GAEJ,GAGT,mBAAoB3I,EAAQG,GAC1B,IAAIgI,EAAK,IAAI3B,EAAGrG,GAChB,GAAIgI,EAAGtB,IAAIP,EAAS1B,IAAM,GAAKuD,EAAGP,SAAU,OAAO,EAEnDO,EAAGS,KAAK,IAAIpC,EAAGxG,IACXmI,EAAGtB,IAAIP,EAAS1B,IAAM,IAAGuD,EAAKA,EAAGG,KAAKhC,EAAS1B,IAEnD,MAAM+D,EAAUR,EAAGI,YAAY7J,WAAY,KAAM,IAGjD,OAFAsB,EAAOwI,IAAIG,GAEJ,GAGT,gBAAiBrI,GACf,MAAMuI,EAAOhB,EAAcvH,GAC3B,OAAgB,OAATuI,EAAgB,EAAI,GAG7B,gBAAiBzJ,EAAQY,GACvB,MAAMmI,EAAK,IAAI3B,EAAGxG,GAClB,GAAImI,EAAGtB,IAAIP,EAAS1B,IAAM,GAAKuD,EAAGP,SAAU,OAAO,EAEnD,MAAMI,EAAQ3B,EAAGyC,eAAe9I,GAAQ+I,YAGxC,OAFAhB,EAAc3I,EAAQ4I,GAEf,GAGT,iBAAkB5I,EAAQkB,GACxB,MAAMuI,EAAOhB,EAAcvH,GAC3B,GAAa,OAATuI,EAAe,OAAO,EAE1B,MAAMb,EAAQa,EAAKE,YAGnB,OAFAhB,EAAc3I,EAAQ4I,GAEf,GAGT,gBAAiB5I,EAAQkB,GACvB,MAAMuI,EAAOhB,EAAcvH,GAC3B,GAAa,OAATuI,EAAe,OAAO,EAE1B,MAAMb,EAAQa,EAAKE,YAInB,OAHAf,EAAM/D,EAAI+D,EAAM/D,EAAEqD,SAClBS,EAAc3I,EAAQ4I,GAEf,GAGT,iBAAkB5I,EAAQwB,GACxB,MAAMoI,EAAQ,IAAIpK,MAAMgC,EAAQnC,QAChC,IAAK,IAAIyJ,EAAI,EAAGA,EAAItH,EAAQnC,SAAUyJ,EAEpC,GADAc,EAAMd,GAAKL,EAAcjH,EAAQsH,IAChB,OAAbc,EAAMd,GAAa,OAAO,EAGhC,IAAIF,EAAQgB,EAAM,GAAGD,YACrB,IAAK,IAAIb,EAAI,EAAGA,EAAIc,EAAMvK,SAAUyJ,EAAGF,EAAQA,EAAMiB,IAAID,EAAMd,GAAGV,KAClE,OAAIQ,EAAMkB,aAAqB,GAE/BnB,EAAc3I,EAAQ4I,GAEf,IAGT,kBAAmB5I,EAAQkB,EAAQH,GACjC,MAAM0I,EAAOhB,EAAcvH,GAC3B,GAAa,OAATuI,EAAe,OAAO,EAG1B,GADA1I,EAAQ,IAAIqG,EAAGrG,GACXA,EAAM0G,IAAIP,EAAS1B,IAAM,EAAG,OAAO,EAEvC,MAAMoD,EAAQa,EAAKE,YAAYE,IAAI3C,EAASnC,EAAEgF,IAAIhJ,IAClD,OAAI6H,EAAMkB,aAAqB,GAE/BnB,EAAc3I,EAAQ4I,GAEf,IAGT,kBAAmB5I,EAAQkB,EAAQH,GACjC,MAAM0I,EAAOhB,EAAcvH,GAC3B,GAAa,OAATuI,EAAe,OAAO,EAG1B,GADA1I,EAAQ,IAAIqG,EAAGrG,GACXA,EAAM0G,IAAIP,EAAS1B,IAAM,GAAKzE,EAAMyH,SAAU,OAAO,EAEzD,MAAMI,EAAQa,EAAKE,YAAYI,IAAIhJ,GAGnC,OAFA4H,EAAc3I,EAAQ4I,GAEf,GAGT,mBAAoBhH,GAClB,MAAMoI,EAAI,IAAI5C,EAAGxF,EAAI8G,SAAS,EAAG,KAC3BuB,EAAI,IAAI7C,EAAGxF,EAAI8G,SAAS,GAAI,KAClC,OAAIsB,EAAEvC,IAAIP,EAAS1B,IAAM,GAAKyE,EAAExC,IAAIP,EAAS1B,IAAM,EAAU,GAExC,IAAjByE,EAAExC,IAAIR,EAAGiD,KACXtI,EAAIwH,IAAIlC,EAAS1B,EAAEyD,IAAIgB,GAAGd,YAAY7J,WAAY,KAAM,IAAK,IAGxD,IAKT,gBAAiBwC,EAAKF,GACpB,MAAMuI,EAAOvI,EAAI8G,SAAS,EAAG,IACvB0B,EAAOxI,EAAI8G,SAAS,GAAI,IAC9B,GAAI,IAAItB,EAAG+C,GAAM1C,IAAIP,EAAS1B,IAAM,EAAG,OAAO,EAC9C,GAAI,IAAI4B,EAAGgD,GAAM3C,IAAIP,EAAS1B,IAAM,EAAG,OAAO,EAE9C,MAAM,OAAExF,GAAW8B,EAGnB,IAAIkI,EAAIhK,EAAO0I,SAAS,EAAG,IAC3BsB,EAAE,GAAK,EACPA,EAAEZ,IAAIe,EAAM,GAEZ,IAAIE,EAAO,GACPC,EAAO,EACX,KAAOD,EAAO,GAAiB,IAAZL,EAAEM,MAAkC,IAAdN,EAAEM,EAAO,MAAcD,IAAQC,GAGxE,GADAN,EAAIA,EAAEtB,SAAS4B,GACJ,IAAPN,EAAE,GAAW,OAAO,EACxB,GAAIK,EAAO,GAAe,IAATL,EAAE,MAAyB,IAAPA,EAAE,IAAY,OAAO,EAG1D,IAAIC,EAAIjK,EAAO0I,SAAS,GAAQ,IAChCuB,EAAE,GAAK,EACPA,EAAEb,IAAIgB,EAAM,GAEZ,IAAIG,EAAO,GACPC,EAAO,EACX,KAAOD,EAAO,GAAiB,IAAZN,EAAEO,MAAkC,IAAdP,EAAEO,EAAO,MAAcD,IAAQC,GAGxE,OADAP,EAAIA,EAAEvB,SAAS8B,GACJ,IAAPP,EAAE,IACFM,EAAO,GAAe,IAATN,EAAE,MAAyB,IAAPA,EAAE,IADf,GAIxBnI,EAAIC,UAAY,EAAIsI,EAAOE,EAI3BvK,EAAO,GAAK,GACZA,EAAO,GAAK8B,EAAIC,UAAY,EAC5B/B,EAAO,GAAK,EACZA,EAAO,GAAKgK,EAAE3K,OACdW,EAAOoJ,IAAIY,EAAG,GACdhK,EAAO,EAAIqK,GAAQ,EACnBrK,EAAO,EAAIqK,GAAQJ,EAAE5K,OACrBW,EAAOoJ,IAAIa,EAAG,EAAII,GAEX,IAKT,gBAAiBrK,EAAQ4B,GACvB,GAAIA,EAAIvC,OAAS,EAAG,OAAO,EAC3B,GAAIuC,EAAIvC,OAAS,GAAI,OAAO,EAC5B,GAAe,KAAXuC,EAAI,GAAa,OAAO,EAC5B,GAAIA,EAAI,KAAOA,EAAIvC,OAAS,EAAG,OAAO,EACtC,GAAe,IAAXuC,EAAI,GAAa,OAAO,EAE5B,MAAMyI,EAAOzI,EAAI,GACjB,GAAa,IAATyI,EAAY,OAAO,EACvB,GAAI,EAAIA,GAAQzI,EAAIvC,OAAQ,OAAO,EACnC,GAAsB,IAAlBuC,EAAI,EAAIyI,GAAgB,OAAO,EAEnC,MAAME,EAAO3I,EAAI,EAAIyI,GACrB,GAAa,IAATE,EAAY,OAAO,EACvB,GAAK,EAAIF,EAAOE,IAAU3I,EAAIvC,OAAQ,OAAO,EAE7C,GAAa,IAATuC,EAAI,GAAW,OAAO,EAC1B,GAAIyI,EAAO,GAAiB,IAAXzI,EAAI,MAA2B,IAATA,EAAI,IAAY,OAAO,EAE9D,GAAoB,IAAhBA,EAAIyI,EAAO,GAAW,OAAO,EACjC,GAAIE,EAAO,GAAwB,IAAlB3I,EAAIyI,EAAO,MAAkC,IAAhBzI,EAAIyI,EAAO,IAAY,OAAO,EAE5E,IAAIF,EAAOvI,EAAI8G,SAAS,EAAG,EAAI2B,GAE/B,GADoB,KAAhBF,EAAK9K,QAA6B,IAAZ8K,EAAK,KAAaA,EAAOA,EAAKzB,SAAS,IAC7DyB,EAAK9K,OAAS,GAAI,OAAO,EAE7B,IAAI+K,EAAOxI,EAAI8G,SAAS,EAAI2B,GAE5B,GADoB,KAAhBD,EAAK/K,QAA6B,IAAZ+K,EAAK,KAAaA,EAAOA,EAAK9J,MAAM,IAC1D8J,EAAK/K,OAAS,GAAI,MAAM,IAAIJ,MAAM,wBAEtC,IAAI+K,EAAI,IAAI5C,EAAG+C,GACXH,EAAEvC,IAAIP,EAAS1B,IAAM,IAAGwE,EAAI,IAAI5C,EAAG,IAEvC,IAAI6C,EAAI,IAAI7C,EAAGxF,EAAI8G,SAAS,EAAI2B,IAMhC,OALIJ,EAAExC,IAAIP,EAAS1B,IAAM,IAAGyE,EAAI,IAAI7C,EAAG,IAEvCpH,EAAOoJ,IAAIY,EAAEb,YAAY7J,WAAY,KAAM,IAAK,GAChDU,EAAOoJ,IAAIa,EAAEd,YAAY7J,WAAY,KAAM,IAAK,IAEzC,GAGT,UAAWwC,EAAK2I,EAAS7J,EAAQwB,EAAMC,GACrC,GAAIA,EAAS,CACX,MAAMqI,EAAWrI,EACjBA,EAAWsI,IACT,MAAMC,EAAQF,EAASD,EAAS7J,EAAQ,KAAMwB,EAAMuI,GAE9CE,EAAUD,aAAiBtL,YAA+B,KAAjBsL,EAAMvL,OACrD,IAAKwL,EAAS,MAAM,IAAI5L,MAAM,mBAE9B,OAAO,IAAImI,EAAGwD,IAIlB,MAAME,EAAI,IAAI1D,EAAGxG,GACjB,GAAIkK,EAAErD,IAAIP,EAAS1B,IAAM,GAAKsF,EAAEtC,SAAU,OAAO,EAEjD,IAAI5G,EACJ,IACEA,EAAMqF,EAAG8D,KAAKN,EAAS7J,EAAQ,CAAEoK,WAAW,EAAMC,EAAG5I,EAAS6I,KAAM9I,IACpE,MAAO0E,GACP,OAAO,EAOT,OAJAhF,EAAIQ,UAAU8G,IAAIxH,EAAIoI,EAAEb,YAAY7J,WAAY,KAAM,IAAK,GAC3DwC,EAAIQ,UAAU8G,IAAIxH,EAAIqI,EAAEd,YAAY7J,WAAY,KAAM,IAAK,IAC3DwC,EAAIS,MAAQX,EAAIuJ,cAET,GAGT,YAAavJ,EAAKM,EAAOhB,GACvB,MAAMkK,EAAS,CAAEpB,EAAGpI,EAAI8G,SAAS,EAAG,IAAKuB,EAAGrI,EAAI8G,SAAS,GAAI,KAEvD2C,EAAO,IAAIjE,EAAGgE,EAAOpB,GACrBsB,EAAO,IAAIlE,EAAGgE,EAAOnB,GAC3B,GAAIoB,EAAK5D,IAAIP,EAAS1B,IAAM,GAAK8F,EAAK7D,IAAIP,EAAS1B,IAAM,EAAG,OAAO,EACnE,GAAwB,IAApB8F,EAAK7D,IAAIR,EAAGiD,KAAamB,EAAK7C,UAAY8C,EAAK9C,SAAU,OAAO,EAEpE,MAAMiB,EAAOhB,EAAcvH,GAC3B,GAAa,OAATuI,EAAe,OAAO,EAE1B,MAAMb,EAAQa,EAAKE,YACbkB,EAAU5D,EAAGsE,OAAOrJ,EAAOkJ,EAAQxC,GACzC,OAAOiC,EAAU,EAAI,GAGvB,aAAc7K,EAAQ4B,EAAKW,EAAOL,GAChC,MAAMkJ,EAAS,CAAEpB,EAAGpI,EAAItB,MAAM,EAAG,IAAK2J,EAAGrI,EAAItB,MAAM,GAAI,KAEjD+K,EAAO,IAAIjE,EAAGgE,EAAOpB,GACrBsB,EAAO,IAAIlE,EAAGgE,EAAOnB,GAC3B,GAAIoB,EAAK5D,IAAIP,EAAS1B,IAAM,GAAK8F,EAAK7D,IAAIP,EAAS1B,IAAM,EAAG,OAAO,EAEnE,GAAI6F,EAAK7C,UAAY8C,EAAK9C,SAAU,OAAO,EAG3C,IAAII,EACJ,IACEA,EAAQ3B,EAAGuE,cAActJ,EAAOkJ,EAAQ7I,GACxC,MAAOuE,GACP,OAAO,EAKT,OAFA6B,EAAc3I,EAAQ4I,GAEf,GAGT,KAAM5I,EAAQkB,EAAQN,EAAQwB,EAAMO,EAAQC,EAAMC,GAChD,MAAM4G,EAAOhB,EAAcvH,GAC3B,GAAa,OAATuI,EAAe,OAAO,EAE1B,MAAMgC,EAAS,IAAIrE,EAAGxG,GACtB,GAAI6K,EAAOhE,IAAIP,EAAS1B,IAAM,GAAKiG,EAAOjD,SAAU,OAAO,EAE3D,MAAMI,EAAQa,EAAKE,YAAYI,IAAI0B,GAEnC,QAAelM,IAAXoD,EAAsB,CACxB,MAAMP,EAAOwG,EAAMC,OAAO,MAAM,GAC1B6C,EAASzE,EAAG5D,OAAOsI,OAAOvJ,GAAMwJ,SACtC,IAAK,IAAI9C,EAAI,EAAGA,EAAI,KAAMA,EAAG9I,EAAO8I,GAAK4C,EAAO5C,OAC3C,CACAlG,IAAMA,EAAO,IAAItD,WAAW,KACjC,MAAMkI,EAAIoB,EAAMiD,OAAOC,QAAQ,KAAM,IACrC,IAAK,IAAIhD,EAAI,EAAGA,EAAI,KAAMA,EAAGlG,EAAKkG,GAAKtB,EAAEsB,GAEpCjG,IAAMA,EAAO,IAAIvD,WAAW,KACjC,MAAMuF,EAAI+D,EAAMmD,OAAOD,QAAQ,KAAM,IACrC,IAAK,IAAIhD,EAAI,EAAGA,EAAI,KAAMA,EAAGjG,EAAKiG,GAAKjE,EAAEiE,GAEzC,MAAMzF,EAAOV,EAAOC,EAAMC,EAAMT,GAE1ByI,EAAUxH,aAAgB/D,YAAc+D,EAAKhE,SAAWW,EAAOX,OACrE,IAAKwL,EAAS,OAAO,EAErB7K,EAAOoJ,IAAI/F,GAGb,OAAO,K;;;;;ECvYX,IAAI2I,EAAwB9L,OAAO8L,sBAC/B/F,EAAiB/F,OAAOC,UAAU8F,eAClCgG,EAAmB/L,OAAOC,UAAU+L,qBAExC,SAASC,EAASC,GACjB,GAAY,OAARA,QAAwB7M,IAAR6M,EACnB,MAAM,IAAIzG,UAAU,yDAGrB,OAAOzF,OAAOkM,GAGf,SAASC,IACR,IACC,IAAKnM,OAAOoM,OACX,OAAO,EAMR,IAAIC,EAAQ,IAAIC,OAAO,OAEvB,GADAD,EAAM,GAAK,KACkC,MAAzCrM,OAAOuM,oBAAoBF,GAAO,GACrC,OAAO,EAKR,IADA,IAAIG,EAAQ,GACH5D,EAAI,EAAGA,EAAI,GAAIA,IACvB4D,EAAM,IAAMF,OAAOG,aAAa7D,IAAMA,EAEvC,IAAI8D,EAAS1M,OAAOuM,oBAAoBC,GAAOG,KAAI,SAAUrH,GAC5D,OAAOkH,EAAMlH,MAEd,GAAwB,eAApBoH,EAAOjN,KAAK,IACf,OAAO,EAIR,IAAImN,EAAQ,GAIZ,MAHA,uBAAuBC,MAAM,IAAIC,SAAQ,SAAUC,GAClDH,EAAMG,GAAUA,KAGf,yBADE/M,OAAOgN,KAAKhN,OAAOoM,OAAO,GAAIQ,IAAQnN,KAAK,IAM9C,MAAOmH,GAER,OAAO,GAITvG,EAAOC,QAAU6L,IAAoBnM,OAAOoM,OAAS,SAAUa,EAAQC,GAKtE,IAJA,IAAIC,EAEAC,EADAC,EAAKpB,EAASgB,GAGTlD,EAAI,EAAGA,EAAIuD,UAAUnO,OAAQ4K,IAAK,CAG1C,IAAK,IAAIwD,KAFTJ,EAAOnN,OAAOsN,UAAUvD,IAERoD,EACXpH,EAAe5F,KAAKgN,EAAMI,KAC7BF,EAAGE,GAAOJ,EAAKI,IAIjB,GAAIzB,EAAuB,CAC1BsB,EAAUtB,EAAsBqB,GAChC,IAAK,IAAIvE,EAAI,EAAGA,EAAIwE,EAAQjO,OAAQyJ,IAC/BmD,EAAiB5L,KAAKgN,EAAMC,EAAQxE,MACvCyE,EAAGD,EAAQxE,IAAMuE,EAAKC,EAAQxE,MAMlC,OAAOyE,I,sBCxFR,YACAhN,EAAOC,QAAUkN,I,kCCKjBnN,EAAOC,QAAU,SAAuBmN,GACtC,GAAmB,kBAARA,EACT,MAAM,IAAI1O,MAAM,2EAA8E0O,EAAO,mCAGvG,MAA2B,OAApBA,EAAIrN,MAAM,EAAG,K,uBCXtBC,EAAOC,QAAU,EAAQ,OAAR,CAAqB,EAAQ,U,uBCA9C,IAAIoN,EAAgB,EAAQ,QAO5BrN,EAAOC,QAAU,SAAwBmN,GACvC,MAAmB,kBAARA,EACFA,EAGFC,EAAcD,GAAOA,EAAIrN,MAAM,GAAKqN,I,qCCZ7C,YAEA,SAASE,EAAmBC,GACxB,OAAO,SAAU9O,GACb,IAAIqE,EAAOyK,IAEX,OADAzK,EAAKsI,OAAO3M,GACL+O,EAAOV,KAAKhK,EAAKuI,WALhC1L,OAAOgG,eAAe1F,EAAS,aAAc,CAAEpB,OAAO,IAQtDoB,EAAQqN,mBAAqBA,I,kECT7B,YAEA,IAAID,EAAgB,EAAQ,QACxBI,EAAiB,EAAQ,QAO7B,SAASC,EAAU7O,GACjB,IAAI8O,EAAI9O,EAER,GAAiB,kBAAN8O,EACT,MAAM,IAAIjP,MAAM,iFAAmFiP,EAAI,sBAOzG,OAJIA,EAAE7O,OAAS,IACb6O,EAAI,IAAMA,GAGLA,EAQT,SAASC,EAASrF,GAChB,IAAIsF,EAAMtF,EAAE1I,SAAS,IAErB,MAAO,KAAOgO,EAQhB,SAASC,EAAYvF,GACnB,IAAIsF,EAAMD,EAASrF,GAEnB,OAAO,IAAIiF,EAAOE,EAAUG,EAAI9N,MAAM,IAAK,OAQ7C,SAASgO,EAAcX,GACrB,GAAmB,kBAARA,EACT,MAAM,IAAI1O,MAAM,oHAAyH0O,EAAM,MAGjJ,OAAOI,EAAOQ,WAAWZ,EAAK,QAYhC,SAASa,EAAmBC,EAAUC,EAAQC,GAC5C,IAAgC,IAA5BnP,MAAMC,QAAQgP,GAChB,MAAM,IAAIxP,MAAM,oGAAyGwP,EAAW,KAEtI,IAA8B,IAA1BjP,MAAMC,QAAQiP,GAChB,MAAM,IAAIzP,MAAM,kGAAuGyP,EAAS,KAGlI,OAAOA,EAAOE,QAAQD,GAAS,OAAU,UAAS,SAAUvP,GAC1D,OAAOqP,EAASI,QAAQzP,IAAU,KAWtC,SAAS0P,EAAOV,GACd,IAAIW,EAAc,IAAIhB,EAAOE,EAAUD,EAAeI,GAAKY,QAAQ,WAAY,KAAM,OAErF,OAAOD,EAAY3O,SAAS,QAU9B,SAAS6O,EAAQb,GACf,IAAIT,EAAM,GACN7E,EAAI,EACJoG,EAAId,EAAI/O,OAMZ,IAJ4B,OAAxB+O,EAAIe,UAAU,EAAG,KACnBrG,EAAI,GAGCA,EAAIoG,EAAGpG,GAAK,EAAG,CACpB,IAAIsG,EAAOC,SAASjB,EAAIkB,OAAOxG,EAAG,GAAI,IACtC6E,GAAOnB,OAAOG,aAAayC,GAG7B,OAAOzB,EAWT,SAAS4B,EAASC,GAChB,IAAI7B,EAAM,IAAII,EAAOyB,EAAa,QAElC,MAAO,KAAOvB,EAAUN,EAAIvN,SAAS,QAAQ4O,QAAQ,WAAY,IAWnE,SAASS,EAAUD,GAEjB,IADA,IAAIpB,EAAM,GACDtF,EAAI,EAAGA,EAAI0G,EAAYnQ,OAAQyJ,IAAK,CAE3C,IAAIsG,EAAOI,EAAYE,WAAW5G,GAC9BtD,EAAI4J,EAAKhP,SAAS,IACtBgO,GAAO5I,EAAEnG,OAAS,EAAI,IAAMmG,EAAIA,EAGlC,MAAO,KAAO4I,EAYhB,SAASuB,EAAQC,EAAQnC,EAAKoC,GAC5B,IAAKrQ,MAAMC,QAAQmQ,GACjB,MAAM,IAAI3Q,MAAM,mFAAwF2Q,EAAS,KAEnH,GAAmB,kBAARnC,EACT,MAAM,IAAIxO,MAAM,iFAAsFwO,EAAM,MAK9G,IAFA,IAAInJ,EAAS,GAEJwE,EAAI,EAAGA,EAAI8G,EAAOvQ,OAAQyJ,IAAK,CAEtC,IAAI1J,EAAQwQ,EAAO9G,GAAG2E,GACtB,GAAIoC,IAAezQ,EACjBA,EAAQ,QACH,GAAqB,kBAAVA,EAChB,MAAM,IAAIH,MAAM,eAElBqF,EAAOuB,KAAKzG,GAGd,OAAOkF,EAWT,SAASwL,EAAY1Q,EAAOC,GAC1B,QAAqB,kBAAVD,IAAuBA,EAAM2Q,MAAM,wBAI1C1Q,GAAUD,EAAMC,SAAW,EAAI,EAAIA,GAOzCkB,EAAOC,QAAU,CACfgO,mBAAoBA,EACpBH,YAAaA,EACbC,cAAeA,EACfV,cAAeA,EACfI,eAAgBA,EAChBC,UAAWA,EACXE,SAAUA,EACVsB,UAAWA,EACXF,SAAUA,EACVN,QAASA,EACTH,OAAQA,EACRa,QAASA,EACTG,YAAaA,K,gEC1Nf,YACA5P,OAAOgG,eAAe1F,EAAS,aAAc,CAAEpB,OAAO,IACtDoB,EAAQwP,UAAYxP,EAAQyP,OAASzP,EAAQqI,YAAS,EACtD,IAAIzB,EAAK,EAAQ,QAOjB,SAASyB,EAAOqH,GACZ,GAAI1Q,MAAMC,QAAQyQ,GAAQ,CAEtB,IADA,IAAIlQ,EAAS,GACJ8I,EAAI,EAAGA,EAAIoH,EAAM7Q,OAAQyJ,IAC9B9I,EAAO6F,KAAKgD,EAAOqH,EAAMpH,KAE7B,IAAIqH,EAAMpC,EAAOqC,OAAOpQ,GACxB,OAAO+N,EAAOqC,OAAO,CAACC,EAAaF,EAAI9Q,OAAQ,KAAM8Q,IAGrD,IAAIG,EAAWC,EAASL,GACxB,OAA2B,IAApBI,EAASjR,QAAgBiR,EAAS,GAAK,IACxCA,EACAvC,EAAOqC,OAAO,CAACC,EAAaC,EAASjR,OAAQ,KAAMiR,IASjE,SAASE,EAAa/K,EAAGgL,GACrB,GAAsB,OAAlBhL,EAAEnF,MAAM,EAAG,GACX,MAAM,IAAIrB,MAAM,4BAEpB,OAAOoQ,SAAS5J,EAAGgL,GAEvB,SAASJ,EAAapQ,EAAKyQ,GACvB,GAAIzQ,EAAM,GACN,OAAO8N,EAAOV,KAAK,CAACpN,EAAMyQ,IAG1B,IAAIC,EAAYxC,EAASlO,GACrB2Q,EAAUD,EAAUtR,OAAS,EAC7BwR,EAAY1C,EAASuC,EAAS,GAAKE,GACvC,OAAO7C,EAAOV,KAAKwD,EAAYF,EAAW,OAGlD,SAASV,EAAOC,EAAOY,GAEnB,QADe,IAAXA,IAAqBA,GAAS,IAC7BZ,GAA0B,IAAjBA,EAAM7Q,OAChB,OAAO0O,EAAOV,KAAK,IAEvB,IAAI0D,EAAcR,EAASL,GACvBc,EAAUC,EAAQF,GACtB,GAAID,EACA,OAAOE,EAEX,GAAiC,IAA7BA,EAAQE,UAAU7R,OAClB,MAAM,IAAIJ,MAAM,qBAEpB,OAAO+R,EAAQ5O,KAQnB,SAAS4N,EAAUE,GACf,IAAKA,GAA0B,IAAjBA,EAAM7Q,OAChB,OAAO0O,EAAOV,KAAK,IAEvB,IAAI0D,EAAcR,EAASL,GACvBW,EAAYE,EAAY,GAC5B,GAAIF,GAAa,IACb,OAAOE,EAAY1R,OAElB,GAAIwR,GAAa,IAClB,OAAOA,EAAY,IAElB,GAAIA,GAAa,IAClB,OAAOA,EAAY,IAElB,GAAIA,GAAa,IAElB,OAAOA,EAAY,IAInB,IAAIM,EAAUN,EAAY,IACtBxR,EAASmR,EAAaO,EAAYzQ,MAAM,EAAG6Q,GAAS/Q,SAAS,OAAQ,IACzE,OAAO+Q,EAAU9R,EAKzB,SAAS4R,EAAQf,GACb,IAAI7Q,EAAQ8R,EAAS/O,EAAMgP,EAAgBtG,EACvCkG,EAAU,GACVH,EAAYX,EAAM,GACtB,GAAIW,GAAa,IAEb,MAAO,CACHzO,KAAM8N,EAAM5P,MAAM,EAAG,GACrB4Q,UAAWhB,EAAM5P,MAAM,IAG1B,GAAIuQ,GAAa,IAAM,CAWxB,GARAxR,EAASwR,EAAY,IAGjBzO,EADc,MAAdyO,EACO9C,EAAOV,KAAK,IAGZ6C,EAAM5P,MAAM,EAAGjB,GAEX,IAAXA,GAAgB+C,EAAK,GAAK,IAC1B,MAAM,IAAInD,MAAM,gDAEpB,MAAO,CACHmD,KAAMA,EACN8O,UAAWhB,EAAM5P,MAAMjB,IAG1B,GAAIwR,GAAa,IAAM,CAIxB,GADAM,EAAUN,EAAY,IAClBX,EAAM7Q,OAAS,EAAI8R,EACnB,MAAM,IAAIlS,MAAM,mDAGpB,GADAI,EAASmR,EAAaN,EAAM5P,MAAM,EAAG6Q,GAAS/Q,SAAS,OAAQ,IAC3Df,GAAU,GACV,MAAM,IAAIJ,MAAM,6DAGpB,GADAmD,EAAO8N,EAAM5P,MAAM6Q,EAAS9R,EAAS8R,GACjC/O,EAAK/C,OAASA,EACd,MAAM,IAAIJ,MAAM,4CAEpB,MAAO,CACHmD,KAAMA,EACN8O,UAAWhB,EAAM5P,MAAMjB,EAAS8R,IAGnC,GAAIN,GAAa,IAAM,CAExBxR,EAASwR,EAAY,IACrBO,EAAiBlB,EAAM5P,MAAM,EAAGjB,GAChC,MAAO+R,EAAe/R,OAClByL,EAAImG,EAAQG,GACZJ,EAAQnL,KAAKiF,EAAE1I,MACfgP,EAAiBtG,EAAEoG,UAEvB,MAAO,CACH9O,KAAM4O,EACNE,UAAWhB,EAAM5P,MAAMjB,IAK3B8R,EAAUN,EAAY,IACtBxR,EAASmR,EAAaN,EAAM5P,MAAM,EAAG6Q,GAAS/Q,SAAS,OAAQ,IAC/D,IAAIiR,EAAcF,EAAU9R,EAC5B,GAAIgS,EAAcnB,EAAM7Q,OACpB,MAAM,IAAIJ,MAAM,qDAGpB,GADAmS,EAAiBlB,EAAM5P,MAAM6Q,EAASE,GACR,IAA1BD,EAAe/R,OACf,MAAM,IAAIJ,MAAM,0CAEpB,MAAOmS,EAAe/R,OAClByL,EAAImG,EAAQG,GACZJ,EAAQnL,KAAKiF,EAAE1I,MACfgP,EAAiBtG,EAAEoG,UAEvB,MAAO,CACH9O,KAAM4O,EACNE,UAAWhB,EAAM5P,MAAM+Q,IAKnC,SAASzD,EAAcD,GACnB,MAA2B,OAApBA,EAAIrN,MAAM,EAAG,GAGxB,SAAS0N,EAAeL,GACpB,MAAmB,kBAARA,EACAA,EAEJC,EAAcD,GAAOA,EAAIrN,MAAM,GAAKqN,EAG/C,SAASQ,EAASmD,GACd,GAAIA,EAAU,EACV,MAAM,IAAIrS,MAAM,kDAEpB,IAAImP,EAAMkD,EAAQlR,SAAS,IAC3B,OAAOgO,EAAI/O,OAAS,EAAI,IAAM+O,EAAMA,EAGxC,SAASH,EAAUC,GACf,OAAOA,EAAE7O,OAAS,EAAI,IAAM6O,EAAIA,EAGpC,SAASG,EAAYiD,GACjB,IAAIlD,EAAMD,EAASmD,GACnB,OAAOvD,EAAOV,KAAKe,EAAK,OAG5B,SAASmC,EAAS9K,GACd,IAAKsI,EAAOwD,SAAS9L,GAAI,CACrB,GAAiB,kBAANA,EACP,OAAImI,EAAcnI,GACPsI,EAAOV,KAAKY,EAAUD,EAAevI,IAAK,OAG1CsI,EAAOV,KAAK5H,GAGtB,GAAiB,kBAANA,GAA+B,kBAANA,EACrC,OAAKA,EAIM4I,EAAY5I,GAHZsI,EAAOV,KAAK,IAMtB,GAAU,OAAN5H,QAAoBlG,IAANkG,EACnB,OAAOsI,EAAOV,KAAK,IAElB,GAAI5H,aAAanG,WAClB,OAAOyO,EAAOV,KAAK5H,GAElB,GAAI2B,EAAGoK,KAAK/L,GAEb,OAAOsI,EAAOV,KAAK5H,EAAEqG,WAGrB,MAAM,IAAI7M,MAAM,gBAGxB,OAAOwG,EA5NXjF,EAAQqI,OAASA,EAsCjBrI,EAAQyP,OAASA,EAgCjBzP,EAAQwP,UAAYA,I,mDChGpB,oBAAoB,EAAQ,QAE5B,SAAS9M,IAEPM,KAAKiO,MAAQ,CACX,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,GAGdjO,KAAKkO,UAAY,KACjBlO,KAAKmO,MAAQ,EACbnO,KAAKoO,WAAY,EAGnB1O,EAAO/C,UAAU0R,WAAa,SAAUC,EAAMC,GAC5C,IAAK,IAAIjJ,EAAI,EAAGA,EAAI,KAAMA,EAAGtF,KAAKiO,MAAM3I,GAAK,EAC7CtF,KAAKkO,UAAYI,EAAO,EACxBtO,KAAKmO,MAAQ,EACbnO,KAAKoO,WAAY,GAGnB1O,EAAO/C,UAAU6R,OAAS,SAAU5P,GAClC,IAAK,IAAI0G,EAAI,EAAGA,EAAI1G,EAAK/C,SAAUyJ,EACjCtF,KAAKiO,SAASjO,KAAKmO,MAAQ,KAAOvP,EAAK0G,IAAYtF,KAAKmO,MAAQ,EAAlB,EAC9CnO,KAAKmO,OAAS,EACVnO,KAAKmO,QAAUnO,KAAKkO,YACtBO,EAAYC,MAAM1O,KAAKiO,OACvBjO,KAAKmO,MAAQ,IAKnBzO,EAAO/C,UAAUgS,kBAAoB,SAAUC,GAC7C5O,KAAKiO,SAASjO,KAAKmO,MAAQ,KAAOS,GAAc5O,KAAKmO,MAAQ,EAAlB,EACrB,KAAV,IAAPS,IAAsB5O,KAAKmO,QAAWnO,KAAKkO,UAAY,GAAIO,EAAYC,MAAM1O,KAAKiO,OACvFjO,KAAKiO,UAAUjO,KAAKkO,UAAY,GAAK,KAAO,MAAelO,KAAKkO,UAAY,GAAK,EAA5B,EACrDO,EAAYC,MAAM1O,KAAKiO,OACvBjO,KAAKmO,MAAQ,EACbnO,KAAKoO,WAAY,GAGnB1O,EAAO/C,UAAUkS,QAAU,SAAUhT,GAC9BmE,KAAKoO,WAAWpO,KAAK2O,kBAAkB,GAE5C,MAAMnS,EAAS+N,EAAOuE,MAAMjT,GAC5B,IAAK,IAAIyJ,EAAI,EAAGA,EAAIzJ,IAAUyJ,EAC5B9I,EAAO8I,GAAMtF,KAAKiO,SAASjO,KAAKmO,MAAQ,MAAcnO,KAAKmO,MAAQ,EAAlB,EAAyB,IAC1EnO,KAAKmO,OAAS,EACVnO,KAAKmO,QAAUnO,KAAKkO,YACtBO,EAAYC,MAAM1O,KAAKiO,OACvBjO,KAAKmO,MAAQ,GAIjB,OAAO3R,GAGTkD,EAAO/C,UAAUoS,KAAO,SAAUC,GAChC,IAAK,IAAI1J,EAAI,EAAGA,EAAI,KAAMA,EAAG0J,EAAKf,MAAM3I,GAAKtF,KAAKiO,MAAM3I,GACxD0J,EAAKd,UAAYlO,KAAKkO,UACtBc,EAAKb,MAAQnO,KAAKmO,MAClBa,EAAKZ,UAAYpO,KAAKoO,WAGxBrR,EAAOC,QAAU0C,I,kDCnEjB3C,EAAOC,QAAU,EAAQ,OAAR,CAAiB,EAAQ,W,kCCC1CN,OAAOgG,eAAe1F,EAAS,aAAc,CAAEpB,OAAO,IACtD,IAAIqT,EAAe,EAAQ,QACvBC,EAAmB,EAAQ,QAC/BlS,EAAQmS,UAAYF,EAAa5E,oBAAmB,WAChD,OAAO6E,EAAiB,gBAE5BlS,EAAQoS,UAAYH,EAAa5E,oBAAmB,WAChD,OAAO6E,EAAiB,gBAE5BlS,EAAQqS,UAAYJ,EAAa5E,oBAAmB,WAChD,OAAO6E,EAAiB,gBAE5BlS,EAAQsS,UAAYL,EAAa5E,oBAAmB,WAChD,OAAO6E,EAAiB,iB,mBCd5B,MAAMK,EAAwB,CAAC,EAAG,EAAG,MAAO,EAAG,MAAO,WAAY,WAAY,WAAY,MAAO,EAAG,WAAY,EAAG,WAAY,WAAY,MAAO,WAAY,IAAK,EAAG,IAAK,EAAG,WAAY,EAAG,WAAY,EAAG,WAAY,EAAG,IAAK,WAAY,MAAO,WAAY,MAAO,WAAY,MAAO,WAAY,IAAK,WAAY,MAAO,EAAG,WAAY,WAAY,WAAY,WAAY,MAAO,WAAY,WAAY,EAAG,WAAY,YAE9ZvS,EAAQ0R,MAAQ,SAAUjI,GACxB,IAAK,IAAI+I,EAAQ,EAAGA,EAAQ,KAAMA,EAAO,CAEvC,MAAMC,EAAMhJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCiJ,EAAMjJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCkJ,EAAMlJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCmJ,EAAMnJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCoJ,EAAMpJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCqJ,EAAMrJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCsJ,EAAMtJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCuJ,EAAMvJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCwJ,EAAMxJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCyJ,EAAMzJ,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAE7C,IAAI0J,EAAKF,GAAON,GAAO,EAAIC,IAAQ,IAC/BQ,EAAKF,GAAON,GAAO,EAAID,IAAQ,IACnC,MAAMU,EAAS5J,EAAE,GAAK0J,EAChBG,EAAS7J,EAAE,GAAK2J,EAChBG,EAAS9J,EAAE,IAAM0J,EACjBK,EAAS/J,EAAE,IAAM2J,EACjBK,EAAUhK,EAAE,IAAM0J,EAClBO,EAAUjK,EAAE,IAAM2J,EAClBO,EAAUlK,EAAE,IAAM0J,EAClBS,EAAUnK,EAAE,IAAM2J,EAClBS,EAAUpK,EAAE,IAAM0J,EAClBW,EAAUrK,EAAE,IAAM2J,EACxBD,EAAKV,GAAOI,GAAO,EAAIC,IAAQ,IAC/BM,EAAKV,GAAOI,GAAO,EAAID,IAAQ,IAC/B,MAAMkB,EAAStK,EAAE,GAAK0J,EAChBa,EAASvK,EAAE,GAAK2J,EAChBa,EAASxK,EAAE,IAAM0J,EACjBe,EAASzK,EAAE,IAAM2J,EACjBe,EAAU1K,EAAE,IAAM0J,EAClBiB,EAAU3K,EAAE,IAAM2J,EAClBiB,EAAU5K,EAAE,IAAM0J,EAClBmB,EAAU7K,EAAE,IAAM2J,EAClBmB,EAAU9K,EAAE,IAAM0J,EAClBqB,EAAU/K,EAAE,IAAM2J,EACxBD,EAAKR,GAAOI,GAAO,EAAIC,IAAQ,IAC/BI,EAAKR,GAAOI,GAAO,EAAID,IAAQ,IAC/B,MAAM0B,EAAShL,EAAE,GAAK0J,EAChBuB,EAASjL,EAAE,GAAK2J,EAChBuB,EAASlL,EAAE,IAAM0J,EACjByB,EAASnL,EAAE,IAAM2J,EACjByB,EAAUpL,EAAE,IAAM0J,EAClB2B,EAAUrL,EAAE,IAAM2J,EAClB2B,EAAUtL,EAAE,IAAM0J,EAClB6B,EAAUvL,EAAE,IAAM2J,EAClB6B,EAAUxL,EAAE,IAAM0J,EAClB+B,EAAUzL,EAAE,IAAM2J,EACxBD,EAAKN,GAAOI,GAAO,EAAIC,IAAQ,IAC/BE,EAAKN,GAAOI,GAAO,EAAID,IAAQ,IAC/B,MAAMkC,EAAS1L,EAAE,GAAK0J,EAChBiC,EAAS3L,EAAE,GAAK2J,EAChBiC,EAAS5L,EAAE,IAAM0J,EACjBmC,EAAS7L,EAAE,IAAM2J,EACjBmC,EAAU9L,EAAE,IAAM0J,EAClBqC,EAAU/L,EAAE,IAAM2J,EAClBqC,EAAUhM,EAAE,IAAM0J,EAClBuC,EAAUjM,EAAE,IAAM2J,EAClBuC,EAAUlM,EAAE,IAAM0J,EAClByC,GAAUnM,EAAE,IAAM2J,EACxBD,EAAKJ,GAAON,GAAO,EAAIC,IAAQ,IAC/BU,EAAKJ,GAAON,GAAO,EAAID,IAAQ,IAC/B,MAAMoD,GAASpM,EAAE,GAAK0J,EAChB2C,GAASrM,EAAE,GAAK2J,EAChB2C,GAAStM,EAAE,IAAM0J,EACjB6C,GAASvM,EAAE,IAAM2J,EACjB6C,GAAUxM,EAAE,IAAM0J,EAClB+C,GAAUzM,EAAE,IAAM2J,EAClB+C,GAAU1M,EAAE,IAAM0J,EAClBiD,GAAU3M,EAAE,IAAM2J,EAClBiD,GAAU5M,EAAE,IAAM0J,EAClBmD,GAAU7M,EAAE,IAAM2J,EAGlBmD,GAASlD,EACTmD,GAASlD,EACTmD,GAAWjD,GAAU,EAAID,IAAW,GACpCmD,GAAWnD,GAAU,EAAIC,IAAW,GACpCmD,GAAUlD,GAAW,EAAIC,IAAY,GACrCkD,GAAUlD,GAAW,EAAID,IAAY,GACrCoD,GAAWjD,GAAW,EAAID,IAAY,GACtCmD,GAAWnD,GAAW,EAAIC,IAAY,GACtCmD,GAAWlD,GAAW,GAAKC,IAAY,GACvCkD,GAAWlD,GAAW,GAAKD,IAAY,GACvCoD,GAAWlD,GAAU,EAAIC,IAAW,GACpCkD,GAAWlD,GAAU,EAAID,IAAW,GACpCoD,GAAUjD,GAAU,GAAKD,IAAW,GACpCmD,GAAUnD,GAAU,GAAKC,IAAW,GACpCmD,GAAWlD,GAAW,GAAKC,IAAY,GACvCkD,GAAWlD,GAAW,GAAKD,IAAY,GACvCoD,GAAUjD,GAAW,GAAKD,IAAY,GACtCmD,GAAUnD,GAAW,GAAKC,IAAY,GACtCmD,GAAWlD,GAAW,EAAIC,IAAY,GACtCkD,GAAWlD,GAAW,EAAID,IAAY,GACtCoD,GAAWjD,GAAU,GAAKD,IAAW,EACrCmD,GAAWnD,GAAU,GAAKC,IAAW,EACrCmD,GAAWlD,GAAU,EAAIC,IAAW,GACpCkD,GAAWlD,GAAU,EAAID,IAAW,GACpCoD,GAAUjD,GAAW,GAAKD,IAAY,GACtCmD,GAAUnD,GAAW,GAAKC,IAAY,GACtCmD,GAAWlD,GAAW,GAAKC,IAAY,GACvCkD,GAAWlD,GAAW,GAAKD,IAAY,GACvCoD,GAAUjD,GAAW,GAAKD,IAAY,EACtCmD,GAAUnD,GAAW,GAAKC,IAAY,EACtCmD,GAAUlD,GAAU,GAAKC,IAAW,EACpCkD,GAAUlD,GAAU,GAAKD,IAAW,EACpCoD,GAAWjD,GAAU,GAAKD,IAAW,EACrCmD,GAAWnD,GAAU,GAAKC,IAAW,EACrCmD,GAAWlD,GAAW,GAAKC,IAAY,EACvCkD,GAAWlD,GAAW,GAAKD,IAAY,EACvCoD,GAAUlD,GAAW,GAAKC,IAAY,GACtCkD,GAAUlD,GAAW,GAAKD,IAAY,GACtCoD,GAAWjD,IAAW,GAAKD,IAAY,EACvCmD,GAAWnD,GAAW,GAAKC,KAAY,EACvCmD,GAAWlD,IAAU,GAAKC,KAAW,EACrCkD,GAAWlD,IAAU,GAAKD,KAAW,EACrCoD,GAAUlD,IAAU,GAAKC,KAAW,GACpCkD,GAAUlD,IAAU,GAAKD,KAAW,GACpCoD,GAAWjD,IAAW,EAAID,KAAY,GACtCmD,GAAWnD,IAAW,EAAIC,KAAY,GACtCmD,GAAWlD,IAAW,EAAIC,KAAY,GACtCkD,GAAWlD,IAAW,EAAID,KAAY,GACtCoD,GAAUlD,IAAW,GAAKC,KAAY,GACtCkD,GAAUlD,IAAW,GAAKD,KAAY,GAG5C5M,EAAE,GAAK8M,IAAWY,GAASY,GAC3BtO,EAAE,GAAK+M,IAAWY,GAASY,GAC3BvO,EAAE,IAAM4O,IAAWY,GAAStC,GAC5BlN,EAAE,IAAM6O,IAAWY,GAAStC,GAC5BnN,EAAE,IAAMwN,IAAYY,GAAUY,GAC9BhP,EAAE,IAAMyN,IAAYY,GAAUY,GAC9BjP,EAAE,IAAMsP,IAAYtC,GAAUY,GAC9B5N,EAAE,IAAMuP,IAAYtC,GAAUY,GAC9B7N,EAAE,IAAMkO,IAAYY,GAAUY,GAC9B1P,EAAE,IAAMmO,IAAYY,GAAUY,GAC9B3P,EAAE,GAAK0N,IAAWY,GAASY,GAC3BlP,EAAE,GAAK2N,IAAWY,GAASY,GAC3BnP,EAAE,IAAMwP,IAAWtC,GAASY,GAC5B9N,EAAE,IAAMyP,IAAWtC,GAASY,GAC5B/N,EAAE,IAAMoO,IAAYY,GAAUY,GAC9B5P,EAAE,IAAMqO,IAAYY,GAAUY,GAC9B7P,EAAE,IAAMgN,IAAYY,GAAUY,GAC9BxO,EAAE,IAAMiN,IAAYY,GAAUY,GAC9BzO,EAAE,IAAM8O,IAAYY,GAAUtC,GAC9BpN,EAAE,IAAM+O,IAAYY,GAAUtC,GAC9BrN,EAAE,GAAKsO,IAAWY,GAASY,GAC3B9P,EAAE,GAAKuO,IAAWY,GAASY,GAC3B/P,EAAE,IAAMkN,IAAWY,GAASY,GAC5B1O,EAAE,IAAMmN,IAAWY,GAASY,GAC5B3O,EAAE,IAAMgP,IAAYY,GAAUtC,GAC9BtN,EAAE,IAAMiP,IAAYY,GAAUtC,GAC9BvN,EAAE,IAAM4N,IAAYY,GAAUY,GAC9BpP,EAAE,IAAM6N,IAAYY,GAAUY,GAC9BrP,EAAE,IAAM0P,IAAYtC,GAAUY,GAC9BhO,EAAE,IAAM2P,IAAYtC,GAAUY,GAC9BjO,EAAE,GAAKkP,IAAWY,GAAShD,GAC3B9M,EAAE,GAAKmP,IAAWY,GAAShD,GAC3B/M,EAAE,IAAM8N,IAAWY,GAASE,GAC5B5O,EAAE,IAAM+N,IAAWY,GAASE,GAC5B7O,EAAE,IAAM4P,IAAYtC,GAAUE,GAC9BxN,EAAE,IAAM6P,IAAYtC,GAAUE,GAC9BzN,EAAE,IAAMwO,IAAYY,GAAUE,GAC9BtP,EAAE,IAAMyO,IAAYY,GAAUE,GAC9BvP,EAAE,IAAMoN,IAAYY,GAAUE,GAC9BlO,EAAE,IAAMqN,IAAYY,GAAUE,GAC9BnO,EAAE,GAAK8P,IAAWhD,GAASY,GAC3B1N,EAAE,GAAK+P,IAAWhD,GAASY,GAC3B3N,EAAE,IAAM0O,IAAWE,GAASY,GAC5BxP,EAAE,IAAM2O,IAAWE,GAASY,GAC5BzP,EAAE,IAAMsN,IAAYE,GAAUY,GAC9BpO,EAAE,IAAMuN,IAAYE,GAAUY,GAC9BrO,EAAE,IAAMoP,IAAYE,GAAUtC,GAC9BhN,EAAE,IAAMqP,IAAYE,GAAUtC,GAC9BjN,EAAE,IAAMgO,IAAYE,GAAUY,GAC9B9O,EAAE,IAAMiO,IAAYE,GAAUY,GAG9B/O,EAAE,IAAM8I,EAA8B,EAARC,GAC9B/I,EAAE,IAAM8I,EAA8B,EAARC,EAAY,M,sBCvL9C,4BAAQiH,GAAc,EAAQ,QAE9B1Z,EAAOC,QAAWyC,GAAgB,MAAMC,UAAe+W,EACrD,YAAanI,EAAMC,EAAUmI,EAAiBC,EAAehY,GAC3DiY,MAAMjY,GAENqB,KAAK6W,MAAQvI,EACbtO,KAAK8W,UAAYvI,EACjBvO,KAAK+W,iBAAmBL,EACxB1W,KAAKgX,eAAiBL,EACtB3W,KAAKiX,SAAWtY,EAEhBqB,KAAKkX,OAAS,IAAIzX,EAClBO,KAAKkX,OAAO7I,WAAWC,EAAMC,GAC7BvO,KAAKmX,YAAa,EAGpB,WAAYC,EAAOC,EAAUC,GAC3B,IAAIC,EAAQ,KACZ,IACEvX,KAAKmI,OAAOiP,EAAOC,GACnB,MAAO/T,GACPiU,EAAQjU,EAGVgU,EAASC,GAGX,OAAQD,GACN,IAAIC,EAAQ,KACZ,IACEvX,KAAKqC,KAAKrC,KAAKoI,UACf,MAAO9E,GACPiU,EAAQjU,EAGVgU,EAASC,GAGX,OAAQ3Y,EAAMyY,GACZ,IAAK9M,EAAOwD,SAASnP,IAAyB,kBAATA,EAAmB,MAAM,IAAIuD,UAAU,qCAC5E,GAAInC,KAAKmX,WAAY,MAAM,IAAI1b,MAAM,yBAKrC,OAJK8O,EAAOwD,SAASnP,KAAOA,EAAO2L,EAAOV,KAAKjL,EAAMyY,IAErDrX,KAAKkX,OAAO1I,OAAO5P,GAEZoB,KAGT,OAAQqX,GACN,GAAIrX,KAAKmX,WAAY,MAAM,IAAI1b,MAAM,yBACrCuE,KAAKmX,YAAa,EAEdnX,KAAK+W,kBAAkB/W,KAAKkX,OAAOvI,kBAAkB3O,KAAK+W,kBAC9D,IAAI3O,EAASpI,KAAKkX,OAAOrI,QAAQ7O,KAAKgX,eAAiB,GAKvD,YAJiBjb,IAAbsb,IAAwBjP,EAASA,EAAOxL,SAASya,IAErDrX,KAAKwX,cAEEpP,EAIT,cAEE,OADApI,KAAKkX,OAAO7I,WAAWrO,KAAK6W,MAAO7W,KAAK8W,WACjC9W,KAIT,SACE,MAAMyX,EAAQ,IAAI/X,EAAOM,KAAK6W,MAAO7W,KAAK8W,UAAW9W,KAAK+W,iBAAkB/W,KAAKgX,eAAgBhX,KAAKiX,UAItG,OAHAjX,KAAKkX,OAAOnI,KAAK0I,EAAMP,QACvBO,EAAMN,WAAanX,KAAKmX,WAEjBM,M,mDC1EX,4BAAQhB,GAAc,EAAQ,QAE9B1Z,EAAOC,QAAWyC,GAAgB,MAAME,UAAc8W,EACpD,YAAanI,EAAMC,EAAUmI,EAAiB/X,GAC5CiY,MAAMjY,GAENqB,KAAK6W,MAAQvI,EACbtO,KAAK8W,UAAYvI,EACjBvO,KAAK+W,iBAAmBL,EACxB1W,KAAKiX,SAAWtY,EAEhBqB,KAAKkX,OAAS,IAAIzX,EAClBO,KAAKkX,OAAO7I,WAAWC,EAAMC,GAC7BvO,KAAKmX,YAAa,EAGpB,WAAYC,EAAOC,EAAUC,GAC3B,IAAIC,EAAQ,KACZ,IACEvX,KAAKmI,OAAOiP,EAAOC,GACnB,MAAO/T,GACPiU,EAAQjU,EAGVgU,EAASC,GAGX,UAEA,MAAOG,GACL1X,KAAKqC,KAAKrC,KAAK6O,QAAQ6I,IAGzB,OAAQ9Y,EAAMyY,GACZ,IAAK9M,EAAOwD,SAASnP,IAAyB,kBAATA,EAAmB,MAAM,IAAIuD,UAAU,qCAC5E,GAAInC,KAAKmX,WAAY,MAAM,IAAI1b,MAAM,0BAKrC,OAJK8O,EAAOwD,SAASnP,KAAOA,EAAO2L,EAAOV,KAAKjL,EAAMyY,IAErDrX,KAAKkX,OAAO1I,OAAO5P,GAEZoB,KAGT,QAAS2X,EAAgBN,GAClBrX,KAAKmX,aACRnX,KAAKmX,YAAa,EAClBnX,KAAKkX,OAAOvI,kBAAkB3O,KAAK+W,mBAGrC,IAAInY,EAAOoB,KAAKkX,OAAOrI,QAAQ8I,GAG/B,YAFiB5b,IAAbsb,IAAwBzY,EAAOA,EAAKhC,SAASya,IAE1CzY,EAGT,cAEE,OADAoB,KAAKkX,OAAO7I,WAAWrO,KAAK6W,MAAO7W,KAAK8W,WACjC9W,KAGT,SACE,MAAMyX,EAAQ,IAAI9X,EAAMK,KAAK6W,MAAO7W,KAAK8W,UAAW9W,KAAK+W,iBAAkB/W,KAAKiX,UAIhF,OAHAjX,KAAKkX,OAAOnI,KAAK0I,EAAMP,QACvBO,EAAMN,WAAanX,KAAKmX,WAEjBM,M,gECjEX,YAEA,IAAIG,EAAe,EAAQ;;;;;;GAW3B,SAASC,EAAQnN,EAAGnG,GAClB,GAAImG,IAAMnG,EACR,OAAO,EAMT,IAHA,IAAIP,EAAI0G,EAAE7O,OACNwF,EAAIkD,EAAE1I,OAEDyJ,EAAI,EAAG7I,EAAMqb,KAAKC,IAAI/T,EAAG3C,GAAIiE,EAAI7I,IAAO6I,EAC/C,GAAIoF,EAAEpF,KAAOf,EAAEe,GAAI,CACjBtB,EAAI0G,EAAEpF,GACNjE,EAAIkD,EAAEe,GACN,MAIJ,OAAItB,EAAI3C,GACE,EAENA,EAAI2C,EACC,EAEF,EAET,SAAS+J,EAASxJ,GAChB,OAAIyT,EAAOzN,QAA4C,oBAA3ByN,EAAOzN,OAAOwD,SACjCiK,EAAOzN,OAAOwD,SAASxJ,KAEjB,MAALA,IAAaA,EAAE0T,WA+B3B,IAAIC,EAAO,EAAQ,QACfC,EAASzb,OAAOC,UAAU8F,eAC1B2V,EAASpc,MAAMW,UAAUG,MACzBub,EAAsB,WACxB,MAAkC,QAA3B,aAAkB1c,KADF,GAGzB,SAAS2c,EAAWha,GAClB,OAAO5B,OAAOC,UAAUC,SAASC,KAAKyB,GAExC,SAASia,EAAOC,GACd,OAAIzK,EAASyK,KAGqB,oBAAvBR,EAAOS,cAGgB,oBAAvBA,YAAYF,OACdE,YAAYF,OAAOC,KAEvBA,IAGDA,aAAkBE,aAGlBF,EAAOG,QAAUH,EAAOG,kBAAkBF,gBAShD,IAAInd,EAASyB,EAAOC,QAAU4b,EAO1BC,EAAQ,8BAEZ,SAASC,EAAQC,GACf,GAAKb,EAAKc,WAAWD,GAArB,CAGA,GAAIV,EACF,OAAOU,EAAKpd,KAEd,IAAIwO,EAAM4O,EAAKnc,WACX2P,EAAQpC,EAAIoC,MAAMsM,GACtB,OAAOtM,GAASA,EAAM,IAyCxB,SAAS0M,EAASxS,EAAGzE,GACnB,MAAiB,kBAANyE,EACFA,EAAE5K,OAASmG,EAAIyE,EAAIA,EAAE3J,MAAM,EAAGkF,GAE9ByE,EAGX,SAASyS,EAAQC,GACf,GAAId,IAAuBH,EAAKc,WAAWG,GACzC,OAAOjB,EAAKgB,QAAQC,GAEtB,IAAIC,EAAUN,EAAQK,GAClBxd,EAAOyd,EAAU,KAAOA,EAAU,GACtC,MAAO,YAAezd,EAAO,IAE/B,SAAS0d,EAAWC,GAClB,OAAOL,EAASC,EAAQI,EAAKC,QAAS,KAAO,IACtCD,EAAKE,SAAW,IAChBP,EAASC,EAAQI,EAAKG,UAAW,KAc1C,SAASC,EAAKH,EAAQE,EAAUxS,EAASuS,EAAUG,GACjD,MAAM,IAAIre,EAAOse,eAAe,CAC9B3S,QAASA,EACTsS,OAAQA,EACRE,SAAUA,EACVD,SAAUA,EACVG,mBAAoBA,IAcxB,SAASf,EAAGhd,EAAOqL,GACZrL,GAAO8d,EAAK9d,GAAO,EAAMqL,EAAS,KAAM3L,EAAOsd,IAoCtD,SAASiB,EAAWN,EAAQE,EAAUK,EAAQC,GAE5C,GAAIR,IAAWE,EACb,OAAO,EACF,GAAI1L,EAASwL,IAAWxL,EAAS0L,GACtC,OAAqC,IAA9B5B,EAAQ0B,EAAQE,GAIlB,GAAIvB,EAAK8B,OAAOT,IAAWrB,EAAK8B,OAAOP,GAC5C,OAAOF,EAAOU,YAAcR,EAASQ,UAKhC,GAAI/B,EAAKgC,SAASX,IAAWrB,EAAKgC,SAAST,GAChD,OAAOF,EAAO3P,SAAW6P,EAAS7P,QAC3B2P,EAAOvB,SAAWyB,EAASzB,QAC3BuB,EAAOY,YAAcV,EAASU,WAC9BZ,EAAOa,YAAcX,EAASW,WAC9Bb,EAAOc,aAAeZ,EAASY,WAIjC,GAAgB,OAAXd,GAAqC,kBAAXA,GACb,OAAbE,GAAyC,kBAAbA,EASjC,IAAIlB,EAAOgB,IAAWhB,EAAOkB,IACzBnB,EAAUiB,KAAYjB,EAAUmB,MAC9BF,aAAkBe,cAClBf,aAAkBgB,cAC7B,OACoD,IAD7C1C,EAAQ,IAAI/b,WAAWyd,EAAOZ,QACtB,IAAI7c,WAAW2d,EAASd,SAQlC,GAAI5K,EAASwL,KAAYxL,EAAS0L,GACvC,OAAO,EAEPM,EAAQA,GAAS,CAACR,OAAQ,GAAIE,SAAU,IAExC,IAAIe,EAAcT,EAAMR,OAAOlO,QAAQkO,GACvC,OAAqB,IAAjBiB,GACEA,IAAgBT,EAAMN,SAASpO,QAAQoO,KAK7CM,EAAMR,OAAOlX,KAAKkX,GAClBQ,EAAMN,SAASpX,KAAKoX,GAEbgB,EAASlB,EAAQE,EAAUK,EAAQC,IApC1C,OAAOD,EAASP,IAAWE,EAAWF,GAAUE,EAwCpD,SAASiB,EAAYC,GACnB,MAAiD,sBAA1Cje,OAAOC,UAAUC,SAASC,KAAK8d,GAGxC,SAASF,EAAS/P,EAAGnG,EAAGuV,EAAQc,GAC9B,GAAU,OAANlQ,QAAoB3O,IAAN2O,GAAyB,OAANnG,QAAoBxI,IAANwI,EACjD,OAAO,EAET,GAAI2T,EAAK2C,YAAYnQ,IAAMwN,EAAK2C,YAAYtW,GAC1C,OAAOmG,IAAMnG,EACf,GAAIuV,GAAUpd,OAAOoe,eAAepQ,KAAOhO,OAAOoe,eAAevW,GAC/D,OAAO,EACT,IAAIwW,EAAUL,EAAYhQ,GACtBsQ,EAAUN,EAAYnW,GAC1B,GAAKwW,IAAYC,IAAcD,GAAWC,EACxC,OAAO,EACT,GAAID,EAGF,OAFArQ,EAAI0N,EAAOvb,KAAK6N,GAChBnG,EAAI6T,EAAOvb,KAAK0H,GACTsV,EAAWnP,EAAGnG,EAAGuV,GAE1B,IAEI7P,EAAK3E,EAFL2V,EAAKC,EAAWxQ,GAChByQ,EAAKD,EAAW3W,GAIpB,GAAI0W,EAAGpf,SAAWsf,EAAGtf,OACnB,OAAO,EAKT,IAHAof,EAAGG,OACHD,EAAGC,OAEE9V,EAAI2V,EAAGpf,OAAS,EAAGyJ,GAAK,EAAGA,IAC9B,GAAI2V,EAAG3V,KAAO6V,EAAG7V,GACf,OAAO,EAIX,IAAKA,EAAI2V,EAAGpf,OAAS,EAAGyJ,GAAK,EAAGA,IAE9B,GADA2E,EAAMgR,EAAG3V,IACJuU,EAAWnP,EAAET,GAAM1F,EAAE0F,GAAM6P,EAAQc,GACtC,OAAO,EAEX,OAAO,EAaT,SAASS,EAAmB9B,EAAQE,EAAUxS,GACxC4S,EAAWN,EAAQE,GAAU,IAC/BC,EAAKH,EAAQE,EAAUxS,EAAS,qBAAsBoU,GAuB1D,SAASC,EAAkB/B,EAAQE,GACjC,IAAKF,IAAWE,EACd,OAAO,EAGT,GAAgD,mBAA5C/c,OAAOC,UAAUC,SAASC,KAAK4c,GACjC,OAAOA,EAAS8B,KAAKhC,GAGvB,IACE,GAAIA,aAAkBE,EACpB,OAAO,EAET,MAAO7Y,IAIT,OAAInF,MAAM+f,cAAc/B,KAIa,IAA9BA,EAAS5c,KAAK,GAAI0c,GAG3B,SAASkC,EAAUC,GACjB,IAAInE,EACJ,IACEmE,IACA,MAAO9a,GACP2W,EAAQ3W,EAEV,OAAO2W,EAGT,SAASoE,EAAQC,EAAaF,EAAOjC,EAAUxS,GAC7C,IAAIsS,EAEJ,GAAqB,oBAAVmC,EACT,MAAM,IAAIvZ,UAAU,uCAGE,kBAAbsX,IACTxS,EAAUwS,EACVA,EAAW,MAGbF,EAASkC,EAAUC,GAEnBzU,GAAWwS,GAAYA,EAAS9d,KAAO,KAAO8d,EAAS9d,KAAO,KAAO,MAC1DsL,EAAU,IAAMA,EAAU,KAEjC2U,IAAgBrC,GAClBG,EAAKH,EAAQE,EAAU,6BAA+BxS,GAGxD,IAAI4U,EAAyC,kBAAZ5U,EAC7B6U,GAAuBF,GAAe1D,EAAK6D,QAAQxC,GACnDyC,GAAyBJ,GAAerC,IAAWE,EASvD,IAPKqC,GACDD,GACAP,EAAkB/B,EAAQE,IAC1BuC,IACFtC,EAAKH,EAAQE,EAAU,yBAA2BxS,GAG/C2U,GAAerC,GAAUE,IACzB6B,EAAkB/B,EAAQE,KAAgBmC,GAAerC,EAC5D,MAAMA,EAmBV,SAASO,EAAOle,EAAOqL,GAChBrL,GAAO8d,EAAK9d,GAAO,EAAMqL,EAAS,KAAM6S,GA3W/Cxe,EAAOse,eAAiB,SAAwBjb,GAC9CqB,KAAKrE,KAAO,iBACZqE,KAAKuZ,OAAS5a,EAAQ4a,OACtBvZ,KAAKyZ,SAAW9a,EAAQ8a,SACxBzZ,KAAKwZ,SAAW7a,EAAQ6a,SACpB7a,EAAQsI,SACVjH,KAAKiH,QAAUtI,EAAQsI,QACvBjH,KAAKic,kBAAmB,IAExBjc,KAAKiH,QAAUoS,EAAWrZ,MAC1BA,KAAKic,kBAAmB,GAE1B,IAAItC,EAAqBhb,EAAQgb,oBAAsBD,EACvD,GAAIje,MAAMygB,kBACRzgB,MAAMygB,kBAAkBlc,KAAM2Z,OACzB,CAEL,IAAIrW,EAAM,IAAI7H,MACd,GAAI6H,EAAI6Y,MAAO,CACb,IAAIC,EAAM9Y,EAAI6Y,MAGVE,EAAUvD,EAAQa,GAClB2C,EAAMF,EAAI/Q,QAAQ,KAAOgR,GAC7B,GAAIC,GAAO,EAAG,CAGZ,IAAIC,EAAYH,EAAI/Q,QAAQ,KAAMiR,EAAM,GACxCF,EAAMA,EAAIzQ,UAAU4Q,EAAY,GAGlCvc,KAAKmc,MAAQC,KAMnBlE,EAAKsE,SAASlhB,EAAOse,eAAgBne,OA6CrCH,EAAOoe,KAAOA,EAYdpe,EAAOsd,GAAKA,EAMZtd,EAAOmhB,MAAQ,SAAelD,EAAQE,EAAUxS,GAC1CsS,GAAUE,GAAUC,EAAKH,EAAQE,EAAUxS,EAAS,KAAM3L,EAAOmhB,QAMvEnhB,EAAOohB,SAAW,SAAkBnD,EAAQE,EAAUxS,GAChDsS,GAAUE,GACZC,EAAKH,EAAQE,EAAUxS,EAAS,KAAM3L,EAAOohB,WAOjDphB,EAAOqhB,UAAY,SAAmBpD,EAAQE,EAAUxS,GACjD4S,EAAWN,EAAQE,GAAU,IAChCC,EAAKH,EAAQE,EAAUxS,EAAS,YAAa3L,EAAOqhB,YAIxDrhB,EAAOshB,gBAAkB,SAAyBrD,EAAQE,EAAUxS,GAC7D4S,EAAWN,EAAQE,GAAU,IAChCC,EAAKH,EAAQE,EAAUxS,EAAS,kBAAmB3L,EAAOshB,kBAuH9DthB,EAAOuhB,aAAe,SAAsBtD,EAAQE,EAAUxS,GACxD4S,EAAWN,EAAQE,GAAU,IAC/BC,EAAKH,EAAQE,EAAUxS,EAAS,eAAgB3L,EAAOuhB,eAI3DvhB,EAAO+f,mBAAqBA,EAW5B/f,EAAOwhB,YAAc,SAAqBvD,EAAQE,EAAUxS,GACtDsS,IAAWE,GACbC,EAAKH,EAAQE,EAAUxS,EAAS,MAAO3L,EAAOwhB,cAOlDxhB,EAAOyhB,eAAiB,SAAwBxD,EAAQE,EAAUxS,GAC5DsS,IAAWE,GACbC,EAAKH,EAAQE,EAAUxS,EAAS,MAAO3L,EAAOyhB,iBA+ElDzhB,EAAO0hB,OAAS,SAAStB,EAAmBnE,EAAmBtQ,GAC7D0U,GAAQ,EAAMD,EAAOnE,EAAOtQ,IAI9B3L,EAAO2hB,aAAe,SAASvB,EAAmBnE,EAAmBtQ,GACnE0U,GAAQ,EAAOD,EAAOnE,EAAOtQ,IAG/B3L,EAAO4hB,QAAU,SAAS5Z,GAAO,GAAIA,EAAK,MAAMA,GAMhDhI,EAAOwe,OAASlC,EAAakC,EAAQxe,EAAQ,CAC3CmhB,MAAOnhB,EAAOwhB,YACdH,UAAWrhB,EAAOshB,gBAClBF,SAAUphB,EAAOyhB,eACjBF,aAAcvhB,EAAO+f,qBAEvB/f,EAAOwe,OAAOA,OAASxe,EAAOwe,OAE9B,IAAIoB,EAAaxe,OAAOgN,MAAQ,SAAUpL,GACxC,IAAIoL,EAAO,GACX,IAAK,IAAIO,KAAO3L,EACV6Z,EAAOtb,KAAKyB,EAAK2L,IAAMP,EAAKrH,KAAK4H,GAEvC,OAAOP,K","file":"js/ens~walletconnect.4244266c.js","sourcesContent":["const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1_1 = require(\"secp256k1\");\nvar random_1 = require(\"./random\");\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\nfunction createPrivateKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var pk;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n                case 1:\n                    pk = _a.sent();\n                    if (secp256k1_1.privateKeyVerify(pk)) {\n                        return [2 /*return*/, pk];\n                    }\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.createPrivateKey = createPrivateKey;\nfunction createPrivateKeySync() {\n    while (true) {\n        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n        if (secp256k1_1.privateKeyVerify(pk)) {\n            return pk;\n        }\n    }\n}\nexports.createPrivateKeySync = createPrivateKeySync;\n__export(require(\"secp256k1\"));\n//# sourceMappingURL=secp256k1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar randombytes = require(\"randombytes\");\nfunction getRandomBytes(bytes) {\n    return new Promise(function (resolve, reject) {\n        randombytes(bytes, function (err, resp) {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve(resp);\n        });\n    });\n}\nexports.getRandomBytes = getRandomBytes;\nfunction getRandomBytesSync(bytes) {\n    return randombytes(bytes);\n}\nexports.getRandomBytesSync = getRandomBytesSync;\n//# sourceMappingURL=random.js.map","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","module.exports = require('./lib/api')(require('./lib/keccak'))\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createHashFunction(hashConstructor) {\n    return function (msg) {\n        var hash = hashConstructor();\n        hash.update(msg);\n        return Buffer.from(hash.digest());\n    };\n}\nexports.createHashFunction = createHashFunction;\n//# sourceMappingURL=hash-utils.js.map","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLength = exports.decode = exports.encode = void 0;\nvar BN = require(\"bn.js\");\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v.slice(0, 2) === '00') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP: not enough bytes for string');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number' || typeof v === 'bigint') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (BN.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map","const keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (let i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n","module.exports = require('./lib')(require('./lib/elliptic'))\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_utils_1 = require(\"./hash-utils\");\nvar createKeccakHash = require(\"keccak\");\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak512\");\n});\n//# sourceMappingURL=keccak.js.map","const P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n","const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n"],"sourceRoot":""}